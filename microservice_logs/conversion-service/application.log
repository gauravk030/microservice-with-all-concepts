{"@timestamp":"2025-10-07T11:23:25.820+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:29.661+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:30.470+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:30.471+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:30.539+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:30.582+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:30.582+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:30.607+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:30.607+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:33.822+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:34.214+05:30","@version":"1","message":"Finished Spring Data repository scanning in 373 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:35.260+05:30","@version":"1","message":"BeanFactory id=b630b8a8-b9ed-3424-9306-0bf81abc618d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.106+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.125+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.136+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.245+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.259+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.264+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$798/0x00000001005e5468] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.277+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.342+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.364+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.397+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.401+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.407+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.442+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.534+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.548+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.552+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.574+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:36.582+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:39.392+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:39.426+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:39.431+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:39.432+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:39.724+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:39.725+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 9116 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:41.909+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:41.965+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:42.542+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@18dce546","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:42.545+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:45.702+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:47.552+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:47.715+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:47.774+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:51.112+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:51.915+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1e742bf1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1155a047, org.springframework.security.web.context.SecurityContextHolderFilter@73cb251c, org.springframework.security.web.header.HeaderWriterFilter@38ecc0cd, org.springframework.web.filter.CorsFilter@a53c7e2, org.springframework.security.web.authentication.logout.LogoutFilter@37d6bfd2, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@85b6da5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b4aa0ca, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e7182cc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1ecbc773, org.springframework.security.web.access.ExceptionTranslationFilter@55ed862d, org.springframework.security.web.access.intercept.AuthorizationFilter@7f8c4376]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.119+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.217+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.402+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.626+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.639+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.684+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.684+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.684+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.684+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.684+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.684+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:54.684+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.164+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.169+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.175+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.182+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759816435182 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.200+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.201+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759816435201, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.206+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.209+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.255+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.259+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.274+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:23:55.852+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 31.991 seconds (process running for 33.169)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:37.991+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:41.790+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:42.632+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:42.634+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:42.704+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:42.754+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:42.754+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:42.754+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:42.754+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:44.886+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:45.135+05:30","@version":"1","message":"Finished Spring Data repository scanning in 234 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:46.290+05:30","@version":"1","message":"BeanFactory id=b630b8a8-b9ed-3424-9306-0bf81abc618d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.263+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.293+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.341+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.384+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.391+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.396+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$804/0x000000010060f278] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.418+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.434+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.469+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.476+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.478+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.480+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.503+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.524+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.542+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.547+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.555+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:47.560+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:48.653+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:48.672+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:48.675+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:48.676+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:48.881+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:48.882+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 6126 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:51.048+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:51.111+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:51.862+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2a6c9f6b","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:51.865+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:54.089+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:55.245+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:55.406+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:55.499+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:57.828+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:58.043+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@96c946c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3821ad38, org.springframework.security.web.context.SecurityContextHolderFilter@12aac1cf, org.springframework.security.web.header.HeaderWriterFilter@5092edf, org.springframework.web.filter.CorsFilter@3a4742c8, org.springframework.security.web.authentication.logout.LogoutFilter@38f8b9d8, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@6a0d012e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@358be03e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74d52f98, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d78b1fb, org.springframework.security.web.access.ExceptionTranslationFilter@67fff58e, org.springframework.security.web.access.intercept.AuthorizationFilter@3216577]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:59.762+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:34:59.864+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.007+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.143+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.152+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.203+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.203+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.203+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.203+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.203+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.203+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.203+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.605+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.610+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.623+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.634+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759817100634 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.651+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.652+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759817100652, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.659+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.660+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.712+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.715+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:00.793+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:35:01.623+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 27.695 seconds (process running for 29.386)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:40:00.221+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:44:18.735+05:30","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:44:18.736+05:30","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:44:18.813+05:30","@version":"1","message":"Completed initialization in 77 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:44:38.015+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:44:38.054+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:45:00.229+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:45:11.878+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-3","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T11:45:11.878+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-3","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:47.228+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:50.420+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:51.393+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:51.397+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:51.435+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:51.466+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:51.466+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:51.467+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:51.467+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:53.249+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:53.475+05:30","@version":"1","message":"Finished Spring Data repository scanning in 213 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.212+05:30","@version":"1","message":"BeanFactory id=a368d9ec-2e2a-3754-95fc-24d3974ab17a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.796+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.804+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.810+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.836+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.841+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.845+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.853+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.867+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.882+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.887+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.888+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.890+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.909+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.927+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.932+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.936+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.943+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.946+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.954+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.959+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:54.964+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:55.848+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:55.866+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:55.868+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:55.868+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:55.993+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:55.995+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 4526 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:57.451+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:57.503+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:58.060+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@614617db","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:58.063+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:30:59.782+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:00.703+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:00.817+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:00.871+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:02.880+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:03.023+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@261d9c45, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4feb5af9, org.springframework.security.web.context.SecurityContextHolderFilter@2fd94494, org.springframework.security.web.header.HeaderWriterFilter@32e2c32a, org.springframework.web.filter.CorsFilter@5783edc2, org.springframework.security.web.authentication.logout.LogoutFilter@32d6d488, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@587babd6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49bad727, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f1ca53f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f3924d0, org.springframework.security.web.access.ExceptionTranslationFilter@1cfc237c, org.springframework.security.web.access.intercept.AuthorizationFilter@4fecfa87]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:04.705+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:04.800+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:04.914+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.039+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.046+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.084+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.084+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.085+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.085+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.085+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.085+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.085+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.438+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.442+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.446+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.453+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759831265452 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.470+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.471+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831265471, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.474+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.475+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.518+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.521+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:05.540+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:31:06.181+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 20.653 seconds (process running for 21.812)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:33:42.197+05:30","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8100-exec-2","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:33:42.197+05:30","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8100-exec-2","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:33:42.203+05:30","@version":"1","message":"Completed initialization in 5 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8100-exec-2","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:33:42.865+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-2","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:33:42.866+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-2","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:33:45.453+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-4","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:33:45.453+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-4","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:26.624+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-5","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:26.625+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-5","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.297+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.300+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.300+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831497300, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.300+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.305+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.306+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.338+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.343+05:30","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.357+05:30","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:34:57.358+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.364+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.380+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.386+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.386+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.388+05:30","@version":"1","message":"Destroying Spring FrameworkServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.392+05:30","@version":"1","message":"The web application [ROOT] appears to have started a thread named [parallel-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)\n java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n java.base@17.0.10/java.lang.Thread.run(Thread.java:840)","logger_name":"org.apache.catalina.loader.WebappClassLoaderBase","thread_name":"Thread-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.392+05:30","@version":"1","message":"The web application [ROOT] appears to have started a thread named [pool-12-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)\n java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n java.base@17.0.10/java.lang.Thread.run(Thread.java:840)","logger_name":"org.apache.catalina.loader.WebappClassLoaderBase","thread_name":"Thread-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.393+05:30","@version":"1","message":"The web application [ROOT] appears to have started a thread named [parallel-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)\n java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n java.base@17.0.10/java.lang.Thread.run(Thread.java:840)","logger_name":"org.apache.catalina.loader.WebappClassLoaderBase","thread_name":"Thread-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:00.394+05:30","@version":"1","message":"The web application [ROOT] appears to have started a thread named [parallel-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)\n java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n java.base@17.0.10/java.lang.Thread.run(Thread.java:840)","logger_name":"org.apache.catalina.loader.WebappClassLoaderBase","thread_name":"Thread-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:03.377+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:04.261+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:04.261+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:04.286+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:04.291+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:04.291+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:04.291+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:04.291+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.099+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.113+05:30","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.294+05:30","@version":"1","message":"BeanFactory id=a368d9ec-2e2a-3754-95fc-24d3974ab17a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.384+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.388+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.391+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.399+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.402+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.404+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.409+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.415+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.422+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.425+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.425+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.425+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.432+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.441+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.444+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.446+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.449+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.451+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.456+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.459+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.461+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.654+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.655+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.655+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.655+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.715+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:05.715+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1424 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:06.163+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:06.164+05:30","@version":"1","message":"HikariPool-2 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:06.185+05:30","@version":"1","message":"HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@406b2fb3","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:06.185+05:30","@version":"1","message":"HikariPool-2 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:06.246+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:06.673+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:06.736+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:06.756+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:07.924+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:07.994+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@fd52fb3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31f64d0e, org.springframework.security.web.context.SecurityContextHolderFilter@85c8dd2, org.springframework.security.web.header.HeaderWriterFilter@3695944d, org.springframework.web.filter.CorsFilter@37addd45, org.springframework.security.web.authentication.logout.LogoutFilter@544e71f1, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@1b2874c4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@334e4971, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@664f4ea6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47ce7654, org.springframework.security.web.access.ExceptionTranslationFilter@bd1f44d, org.springframework.security.web.access.intercept.AuthorizationFilter@296ed216]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.039+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.135+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.181+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.188+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.188+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.199+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.199+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.199+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.199+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.199+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.199+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.199+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.227+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.229+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.230+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.231+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759831509230 with initial instances count: 4","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.242+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.243+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831509243, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.244+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.244+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.250+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.251+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.263+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.905+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 9.394 seconds (process running for 265.535)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:35:09.939+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.313+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.316+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.316+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831563316, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.317+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.320+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.330+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.349+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.350+05:30","@version":"1","message":"HikariPool-2 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.356+05:30","@version":"1","message":"HikariPool-2 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:03.357+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:06.372+05:30","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:06.374+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:06.379+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:06.383+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:06.383+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-17","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:09.992+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:12.119+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:12.119+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:12.137+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:12.139+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:12.139+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:12.139+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:12.139+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.005+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.023+05:30","@version":"1","message":"Finished Spring Data repository scanning in 17 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.186+05:30","@version":"1","message":"BeanFactory id=a368d9ec-2e2a-3754-95fc-24d3974ab17a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.260+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.263+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.266+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.273+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.276+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.278+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.283+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.288+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.295+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.298+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.299+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.299+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.311+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.321+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.324+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.325+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.328+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.329+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.333+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.340+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.341+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.504+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.505+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.505+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.506+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.559+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.559+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1419 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.918+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.919+05:30","@version":"1","message":"HikariPool-3 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.936+05:30","@version":"1","message":"HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@64749b9f","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.936+05:30","@version":"1","message":"HikariPool-3 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:13.982+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:14.361+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:14.426+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:14.443+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:15.540+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:15.602+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2996980b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79ddbd19, org.springframework.security.web.context.SecurityContextHolderFilter@71006ffb, org.springframework.security.web.header.HeaderWriterFilter@213280a8, org.springframework.web.filter.CorsFilter@2293eabb, org.springframework.security.web.authentication.logout.LogoutFilter@6196c041, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@1b91f468, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b29e90, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a809968, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@343a7621, org.springframework.security.web.access.ExceptionTranslationFilter@75ac042b, org.springframework.security.web.access.intercept.AuthorizationFilter@625c4a0d]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.467+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.523+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.561+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.568+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.569+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.570+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.571+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.571+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.571+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.571+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.571+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.571+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.597+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.598+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.599+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.599+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759831576599 with initial instances count: 4","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.610+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.610+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831576610, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.611+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.612+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.616+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.618+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:16.628+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:17.204+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 10.706 seconds (process running for 332.836)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:17.207+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.043+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.046+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.046+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831597046, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.046+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.049+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.053+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.072+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.072+05:30","@version":"1","message":"HikariPool-3 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.078+05:30","@version":"1","message":"HikariPool-3 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:37.079+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:40.086+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:40.103+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:40.109+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:40.110+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-33","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:42.464+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.190+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.190+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.208+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.210+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.210+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.210+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.210+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.809+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.820+05:30","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:43.956+05:30","@version":"1","message":"BeanFactory id=a368d9ec-2e2a-3754-95fc-24d3974ab17a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.023+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.027+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.032+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.039+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.042+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.044+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.050+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.055+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.062+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.064+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.064+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.065+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.070+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.079+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.082+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.083+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.085+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.087+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.090+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.093+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.094+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.324+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.326+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.326+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.326+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.382+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.383+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1173 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.756+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.757+05:30","@version":"1","message":"HikariPool-4 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.774+05:30","@version":"1","message":"HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@531a3aad","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.774+05:30","@version":"1","message":"HikariPool-4 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:44.823+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:45.146+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:45.216+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:45.237+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:46.454+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:46.512+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6cb53d6f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a477e97, org.springframework.security.web.context.SecurityContextHolderFilter@3377228, org.springframework.security.web.header.HeaderWriterFilter@50a66636, org.springframework.web.filter.CorsFilter@13d89099, org.springframework.security.web.authentication.logout.LogoutFilter@644cf77c, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@6874d7f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c8816ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52b28ada, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1713b1ee, org.springframework.security.web.access.ExceptionTranslationFilter@76ae8845, org.springframework.security.web.access.intercept.AuthorizationFilter@34f46b3f]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.398+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.449+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.492+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.498+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.498+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.499+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.499+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.499+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.499+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.499+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.499+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.499+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.529+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.531+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.533+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.534+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759831607534 with initial instances count: 4","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.547+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.547+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831607547, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.547+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.549+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.560+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.561+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:47.563+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:48.133+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 7.907 seconds (process running for 363.765)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:48.136+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.710+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.711+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.711+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831613711, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.711+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.712+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.716+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.734+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.735+05:30","@version":"1","message":"HikariPool-4 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.740+05:30","@version":"1","message":"HikariPool-4 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:53.741+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:56.756+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:56.774+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:56.778+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:56.779+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-49","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:36:59.328+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.071+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.071+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.092+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.094+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.094+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.094+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.094+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.770+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:00.781+05:30","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.033+05:30","@version":"1","message":"BeanFactory id=a368d9ec-2e2a-3754-95fc-24d3974ab17a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.178+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.182+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.187+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.195+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.198+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.199+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.204+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.209+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.214+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.217+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.219+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.220+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.226+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.233+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.237+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.238+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.241+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.242+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.245+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.247+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.249+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.425+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.426+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.426+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.426+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.529+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.530+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1436 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.895+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.896+05:30","@version":"1","message":"HikariPool-5 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.910+05:30","@version":"1","message":"HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3dd5c37","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.911+05:30","@version":"1","message":"HikariPool-5 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:01.964+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:02.338+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:02.397+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:02.422+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:03.781+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:03.841+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15c3fde7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38d9a0fc, org.springframework.security.web.context.SecurityContextHolderFilter@340d2ecc, org.springframework.security.web.header.HeaderWriterFilter@c11c89b, org.springframework.web.filter.CorsFilter@18fa03fb, org.springframework.security.web.authentication.logout.LogoutFilter@5f5e71d4, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@4af95466, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@589354d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d2d229c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@cf2c7e2, org.springframework.security.web.access.ExceptionTranslationFilter@d4fed72, org.springframework.security.web.access.intercept.AuthorizationFilter@7a6e0466]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.782+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.858+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.912+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.919+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.919+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.920+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.920+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.920+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.920+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.920+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.920+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.920+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.940+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.941+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.941+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.942+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759831624942 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.968+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.968+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831624968, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.968+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.969+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.973+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.973+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:04.981+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:05.579+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 8.668 seconds (process running for 381.21)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:05.582+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.746+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.749+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.750+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831648750, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.750+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.756+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.762+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.779+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.780+05:30","@version":"1","message":"HikariPool-5 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.788+05:30","@version":"1","message":"HikariPool-5 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:28.789+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:31.796+05:30","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:31.799+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:31.805+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:31.816+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:31.817+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-65","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:34.303+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.025+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.025+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.042+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.045+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.045+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.045+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.045+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.714+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.725+05:30","@version":"1","message":"Finished Spring Data repository scanning in 11 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.836+05:30","@version":"1","message":"BeanFactory id=a368d9ec-2e2a-3754-95fc-24d3974ab17a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.892+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.897+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.899+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.905+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.908+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.909+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.913+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.918+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.923+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.925+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.926+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.926+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.931+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.938+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.941+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.942+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.945+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.946+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.950+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.952+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:35.953+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.099+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.100+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.100+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.100+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.188+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.188+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1143 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.540+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.541+05:30","@version":"1","message":"HikariPool-6 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.555+05:30","@version":"1","message":"HikariPool-6 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f1bad06","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.555+05:30","@version":"1","message":"HikariPool-6 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.593+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.831+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.891+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:36.911+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:38.034+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:38.088+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7f6425e9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@183c65b1, org.springframework.security.web.context.SecurityContextHolderFilter@3046c26e, org.springframework.security.web.header.HeaderWriterFilter@7b4ab590, org.springframework.web.filter.CorsFilter@250e7bce, org.springframework.security.web.authentication.logout.LogoutFilter@4d460c8c, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@1d7fecc4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fb60989, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@593f85c0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53de4243, org.springframework.security.web.access.ExceptionTranslationFilter@4f456109, org.springframework.security.web.access.intercept.AuthorizationFilter@7e1ff568]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:38.972+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.023+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.056+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.060+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.061+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.062+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.062+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.062+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.062+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.062+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.062+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.062+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.079+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.080+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.081+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.082+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759831659082 with initial instances count: 4","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.093+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.093+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759831659093, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.093+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.094+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.098+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.098+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.105+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.674+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 7.738 seconds (process running for 415.306)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:37:39.677+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:12.501+05:30","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:12.501+05:30","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:12.504+05:30","@version":"1","message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:12.569+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:12.570+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:17.642+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-2","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:17.642+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-2","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:18.820+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-3","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:18.820+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-3","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:19.674+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-4","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:19.674+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-4","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:19.999+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-5","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:19.999+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-5","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:20.904+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-6","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:38:20.904+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-6","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:39:06.831+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-7","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:39:06.831+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-7","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:42:39.076+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:31.322+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:31.409+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:31.417+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832251417, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:31.419+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:31.542+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:32.106+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:32.464+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:32.548+05:30","@version":"1","message":"HikariPool-6 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:32.732+05:30","@version":"1","message":"HikariPool-6 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:32.779+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.790+05:30","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-0","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.812+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.820+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.832+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.835+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.841+05:30","@version":"1","message":"Destroying Spring FrameworkServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"Thread-81","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.885+05:30","@version":"1","message":"The web application [ROOT] appears to have started a thread named [parallel-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)\n java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n java.base@17.0.10/java.lang.Thread.run(Thread.java:840)","logger_name":"org.apache.catalina.loader.WebappClassLoaderBase","thread_name":"Thread-81","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.886+05:30","@version":"1","message":"The web application [ROOT] appears to have started a thread named [pool-58-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)\n java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n java.base@17.0.10/java.lang.Thread.run(Thread.java:840)","logger_name":"org.apache.catalina.loader.WebappClassLoaderBase","thread_name":"Thread-81","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:35.887+05:30","@version":"1","message":"The web application [ROOT] appears to have started a thread named [CircuitBreakerAutoTransitionThread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)\n java.base@17.0.10/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)\n java.base@17.0.10/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)\n java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)\n java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)\n java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n java.base@17.0.10/java.lang.Thread.run(Thread.java:840)","logger_name":"org.apache.catalina.loader.WebappClassLoaderBase","thread_name":"Thread-81","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:40.531+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:41.258+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:41.259+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:41.279+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:41.282+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:41.282+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:41.282+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:41.282+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.613+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.628+05:30","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.776+05:30","@version":"1","message":"BeanFactory id=a368d9ec-2e2a-3754-95fc-24d3974ab17a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.863+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.869+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.877+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.889+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.893+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.896+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.904+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.915+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.925+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.930+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.934+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.934+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.950+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.980+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.985+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.989+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:42.995+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:43.005+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:43.026+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:43.043+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:43.047+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:43.509+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:43.509+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:43.509+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:43.510+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:44.312+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:44.312+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 3030 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:45.728+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:45.731+05:30","@version":"1","message":"HikariPool-7 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:45.897+05:30","@version":"1","message":"HikariPool-7 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7e5e1074","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:45.897+05:30","@version":"1","message":"HikariPool-7 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:46.003+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:46.280+05:30","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'currencyConversionController' defined in file [D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\currency-conversion-service-with-ribbonfeign\\target\\classes\\com\\demo\\microservices\\currencyconversionservice\\controller\\CurrencyConversionController.class]: Failed to instantiate [com.demo.microservices.currencyconversionservice.controller.CurrencyConversionController]: Constructor threw exception","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:46.280+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:46.280+05:30","@version":"1","message":"HikariPool-7 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:46.306+05:30","@version":"1","message":"HikariPool-7 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:46.308+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:46.325+05:30","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:47:46.391+05:30","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"restartedMain","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'currencyConversionController' defined in file [D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\currency-conversion-service-with-ribbonfeign\\target\\classes\\com\\demo\\microservices\\currencyconversionservice\\controller\\CurrencyConversionController.class]: Failed to instantiate [com.demo.microservices.currencyconversionservice.controller.CurrencyConversionController]: Constructor threw exception\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1316)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication.main(CurrencyConversionServiceApplication.java:13)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.demo.microservices.currencyconversionservice.controller.CurrencyConversionController]: Constructor threw exception\r\n\tat org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:223)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:88)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1310)\r\n\t... 22 common frames omitted\r\nCaused by: java.lang.Error: Unresolved compilation problems: \n\tRestTemplate cannot be resolved to a type\n\ttoken cannot be resolved to a variable\n\tRestTemplate cannot be resolved to a type\n\tHttpMethod cannot be resolved to a variable\n\r\n\tat com.demo.microservices.currencyconversionservice.controller.CurrencyConversionController.<init>(CurrencyConversionController.java:28)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:197)\r\n\t... 24 common frames omitted\r\n","service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:03.629+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:04.486+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:04.486+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:04.563+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:04.568+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:04.568+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:04.569+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:04.569+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.324+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.339+05:30","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.716+05:30","@version":"1","message":"BeanFactory id=a368d9ec-2e2a-3754-95fc-24d3974ab17a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.922+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.933+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.938+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.950+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.964+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.966+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.973+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.980+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.987+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.990+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.990+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:05.991+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.001+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.014+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.029+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.033+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.056+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.109+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.153+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.213+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:06.275+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:07.101+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:07.103+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:07.107+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:07.109+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:07.252+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:07.253+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 2684 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:07.985+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:07.986+05:30","@version":"1","message":"HikariPool-8 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.014+05:30","@version":"1","message":"HikariPool-8 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7af5764","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.014+05:30","@version":"1","message":"HikariPool-8 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.086+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.585+05:30","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'currencyConversionController' defined in file [D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\currency-conversion-service-with-ribbonfeign\\target\\classes\\com\\demo\\microservices\\currencyconversionservice\\controller\\CurrencyConversionController.class]: Failed to instantiate [com.demo.microservices.currencyconversionservice.controller.CurrencyConversionController]: Constructor threw exception","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.585+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.586+05:30","@version":"1","message":"HikariPool-8 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.604+05:30","@version":"1","message":"HikariPool-8 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.605+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.620+05:30","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:08.624+05:30","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"restartedMain","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'currencyConversionController' defined in file [D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\currency-conversion-service-with-ribbonfeign\\target\\classes\\com\\demo\\microservices\\currencyconversionservice\\controller\\CurrencyConversionController.class]: Failed to instantiate [com.demo.microservices.currencyconversionservice.controller.CurrencyConversionController]: Constructor threw exception\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1316)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication.main(CurrencyConversionServiceApplication.java:13)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.demo.microservices.currencyconversionservice.controller.CurrencyConversionController]: Constructor threw exception\r\n\tat org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:223)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:88)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1310)\r\n\t... 22 common frames omitted\r\nCaused by: java.lang.Error: Unresolved compilation problems: \n\tRestTemplate cannot be resolved to a type\n\ttoken cannot be resolved to a variable\n\tRestTemplate cannot be resolved to a type\n\tHttpMethod cannot be resolved to a variable\n\r\n\tat com.demo.microservices.currencyconversionservice.controller.CurrencyConversionController.<init>(CurrencyConversionController.java:28)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:197)\r\n\t... 24 common frames omitted\r\n","service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:28.237+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:28.975+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:28.975+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:28.994+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:28.997+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:28.997+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:28.997+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:28.997+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:29.461+05:30","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'securityFilterChain' defined in class path resource [com/demo/microservices/currencyconversionservice/config/SecurityConfig.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=securityConfig; factoryMethodName=securityFilterChain; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/demo/microservices/currencyconversionservice/config/SecurityConfig.class]] for bean 'securityFilterChain' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=appConfig; factoryMethodName=securityFilterChain; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/demo/microservices/currencyconversionservice/config/AppConfig.class]] bound.","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:29.475+05:30","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:29.488+05:30","@version":"1","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe bean 'securityFilterChain', defined in class path resource [com/demo/microservices/currencyconversionservice/config/SecurityConfig.class], could not be registered. A bean with that name has already been defined in class path resource [com/demo/microservices/currencyconversionservice/config/AppConfig.class] and overriding is disabled.\r\n\r\nAction:\r\n\r\nConsider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true\r\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"restartedMain","level":"ERROR","level_value":40000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:39.074+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:39.838+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:39.838+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:39.874+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:39.876+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:39.876+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:39.876+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:39.876+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:40.931+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:40.947+05:30","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.161+05:30","@version":"1","message":"BeanFactory id=a9eabaa5-88ee-3805-9c8d-b1c87ccc995c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.243+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.253+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.259+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.267+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.271+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.273+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.280+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.286+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.292+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.294+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.294+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.294+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.302+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.312+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.318+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.319+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.322+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.325+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.329+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.332+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.334+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.674+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.678+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.682+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.684+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.812+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-2].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:41.812+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1936 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.245+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.246+05:30","@version":"1","message":"HikariPool-9 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.268+05:30","@version":"1","message":"HikariPool-9 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6425b572","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.268+05:30","@version":"1","message":"HikariPool-9 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.309+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.560+05:30","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'appConfig' defined in file [D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\currency-conversion-service-with-ribbonfeign\\target\\classes\\com\\demo\\microservices\\currencyconversionservice\\config\\AppConfig.class]: Failed to instantiate [com.demo.microservices.currencyconversionservice.config.AppConfig$$SpringCGLIB$$0]: Constructor threw exception","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.561+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.564+05:30","@version":"1","message":"HikariPool-9 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.580+05:30","@version":"1","message":"HikariPool-9 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.581+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.599+05:30","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:42.604+05:30","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"restartedMain","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'appConfig' defined in file [D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\currency-conversion-service-with-ribbonfeign\\target\\classes\\com\\demo\\microservices\\currencyconversionservice\\config\\AppConfig.class]: Failed to instantiate [com.demo.microservices.currencyconversionservice.config.AppConfig$$SpringCGLIB$$0]: Constructor threw exception\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1316)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication.main(CurrencyConversionServiceApplication.java:13)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.demo.microservices.currencyconversionservice.config.AppConfig$$SpringCGLIB$$0]: Constructor threw exception\r\n\tat org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:223)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:88)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1310)\r\n\t... 22 common frames omitted\r\nCaused by: java.lang.Error: Unresolved compilation problem: \n\tThe declared package \"\" does not match the expected package \"com.demo.microservices.currencyconversionservice.config\"\n\r\n\tat com.demo.microservices.currencyconversionservice.config.AppConfig.<init>(AppConfig.java:1)\r\n\tat com.demo.microservices.currencyconversionservice.config.AppConfig$$SpringCGLIB$$0.<init>(<generated>)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:197)\r\n\t... 24 common frames omitted\r\n","service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:57.477+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.211+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.211+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.235+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.237+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.237+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.237+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.237+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.824+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:58.841+05:30","@version":"1","message":"Finished Spring Data repository scanning in 11 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.055+05:30","@version":"1","message":"BeanFactory id=a9eabaa5-88ee-3805-9c8d-b1c87ccc995c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.130+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.134+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.137+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.145+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.150+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.154+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.160+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.168+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.173+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.176+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.177+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.178+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.184+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.193+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.197+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.198+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.202+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.207+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.221+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.225+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.227+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.486+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.489+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.490+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.492+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.610+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:48:59.610+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1373 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:00.229+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:00.230+05:30","@version":"1","message":"HikariPool-10 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:00.245+05:30","@version":"1","message":"HikariPool-10 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5310c6b8","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:00.245+05:30","@version":"1","message":"HikariPool-10 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:00.291+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:00.621+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:00.684+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:00.705+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:02.034+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:02.099+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3ad0439, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cffcdb4, org.springframework.security.web.context.SecurityContextHolderFilter@4a5ce9a9, org.springframework.security.web.header.HeaderWriterFilter@162733f6, org.springframework.web.filter.CorsFilter@1f8b08ab, org.springframework.security.web.authentication.logout.LogoutFilter@9bad511, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@3ee2b24c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@450cc8eb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64d27c62, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62cff810, org.springframework.security.web.access.ExceptionTranslationFilter@f017687, org.springframework.security.web.access.intercept.AuthorizationFilter@5b38427b]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.412+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.494+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.588+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.595+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.595+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.597+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.597+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.597+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.597+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.597+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.597+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.597+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.628+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.629+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.630+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.630+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759832343630 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.642+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.642+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832343642, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.642+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.642+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.647+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.648+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:03.665+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:04.447+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 14.708 seconds (process running for 1100.077)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:04.449+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.666+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.669+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.669+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832347669, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.670+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.676+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.694+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.694+05:30","@version":"1","message":"HikariPool-10 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.699+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.709+05:30","@version":"1","message":"HikariPool-10 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:07.709+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:10.716+05:30","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-0","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:10.717+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:10.734+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:10.736+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:10.737+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-98","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:13.249+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:13.982+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:13.982+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:13.999+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:14.001+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:14.001+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:14.001+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:14.001+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:14.710+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:14.725+05:30","@version":"1","message":"Finished Spring Data repository scanning in 12 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:14.929+05:30","@version":"1","message":"BeanFactory id=a9eabaa5-88ee-3805-9c8d-b1c87ccc995c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:14.998+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.001+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.005+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.012+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.019+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.021+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.026+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.034+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.045+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.047+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.050+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.051+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.057+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.070+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.074+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.076+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.080+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.086+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.091+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.095+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.097+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.377+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.380+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.380+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.381+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.488+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.488+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1487 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.982+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.983+05:30","@version":"1","message":"HikariPool-11 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.996+05:30","@version":"1","message":"HikariPool-11 - Added connection com.mysql.cj.jdbc.ConnectionImpl@a1817e3","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:15.996+05:30","@version":"1","message":"HikariPool-11 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:16.038+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:16.463+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:16.540+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:16.569+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:17.981+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:18.055+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@48cd19ca, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5534d37f, org.springframework.security.web.context.SecurityContextHolderFilter@7d925ed3, org.springframework.security.web.header.HeaderWriterFilter@3af2e7cd, org.springframework.web.filter.CorsFilter@256b45a8, org.springframework.security.web.authentication.logout.LogoutFilter@62e3a607, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@68587fc6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5afba376, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39a2e726, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ed46cf9, org.springframework.security.web.access.ExceptionTranslationFilter@4ecc042, org.springframework.security.web.access.intercept.AuthorizationFilter@4be001cc]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.272+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.336+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.393+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.403+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.405+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.407+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.408+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.408+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.408+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.408+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.409+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.418+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.444+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.445+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.446+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.446+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759832359446 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.458+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.458+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832359458, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.459+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.464+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.464+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.475+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:19.488+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:20.229+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 9.247 seconds (process running for 1115.859)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:49:20.232+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.722+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.726+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.728+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832414728, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.728+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.734+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.741+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.764+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.764+05:30","@version":"1","message":"HikariPool-11 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.771+05:30","@version":"1","message":"HikariPool-11 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:14.771+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:17.784+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:17.801+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:17.808+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:17.808+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-185","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:20.486+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.199+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.199+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.220+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.222+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.222+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.222+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.222+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.828+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:21.839+05:30","@version":"1","message":"Finished Spring Data repository scanning in 11 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.155+05:30","@version":"1","message":"BeanFactory id=a9eabaa5-88ee-3805-9c8d-b1c87ccc995c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.220+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.225+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.229+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.237+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.241+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.243+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.249+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.260+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.272+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.276+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.276+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.276+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.285+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.308+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.313+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.317+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.332+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.335+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.340+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.344+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.351+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.736+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.737+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.739+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.740+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.816+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:22.818+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1596 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:23.514+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:23.518+05:30","@version":"1","message":"HikariPool-12 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:23.539+05:30","@version":"1","message":"HikariPool-12 - Added connection com.mysql.cj.jdbc.ConnectionImpl@51f5fc5a","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:23.539+05:30","@version":"1","message":"HikariPool-12 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:23.583+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:23.915+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:23.973+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:23.993+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:25.183+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:25.237+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15711bc4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@629f5b3b, org.springframework.security.web.context.SecurityContextHolderFilter@3042db08, org.springframework.security.web.header.HeaderWriterFilter@bb56fdf, org.springframework.web.filter.CorsFilter@27de38a2, org.springframework.security.web.authentication.logout.LogoutFilter@55fd7273, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@160d4bd8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6681788b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5963eab7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f804018, org.springframework.security.web.access.ExceptionTranslationFilter@1bf56b12, org.springframework.security.web.access.intercept.AuthorizationFilter@154f6cd]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.194+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.267+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.341+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.350+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.351+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.357+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.361+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.361+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.361+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.362+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.362+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.362+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.398+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.410+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.412+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.415+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759832426415 with initial instances count: 4","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.432+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.434+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832426434, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.435+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.440+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.441+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.445+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:26.459+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:27.444+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 9.326 seconds (process running for 1183.075)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:27.453+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.072+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.074+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.074+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832451074, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.075+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.078+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.088+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.105+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.106+05:30","@version":"1","message":"HikariPool-12 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.111+05:30","@version":"1","message":"HikariPool-12 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:51.111+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:54.116+05:30","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-0","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:54.117+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:54.134+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:54.137+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:54.137+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-204","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:56.704+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:57.549+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:57.549+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:57.573+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:57.575+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:57.576+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:57.576+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:57.576+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.283+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.294+05:30","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.493+05:30","@version":"1","message":"BeanFactory id=a9eabaa5-88ee-3805-9c8d-b1c87ccc995c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.553+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.557+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.560+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.567+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.571+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.573+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.578+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.589+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.594+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.596+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.596+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.596+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.607+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.616+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.619+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.621+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.624+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.626+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.629+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.632+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:58.634+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:59.010+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:59.012+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:59.028+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:59.031+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:59.263+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:50:59.263+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1687 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:00.232+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:00.235+05:30","@version":"1","message":"HikariPool-13 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:00.319+05:30","@version":"1","message":"HikariPool-13 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1462387f","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:00.320+05:30","@version":"1","message":"HikariPool-13 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:00.396+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:00.842+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:00.898+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:00.919+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:02.251+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:02.315+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@49a9122d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23d79c5d, org.springframework.security.web.context.SecurityContextHolderFilter@718a9179, org.springframework.security.web.header.HeaderWriterFilter@2d62ff71, org.springframework.web.filter.CorsFilter@63ab753e, org.springframework.security.web.authentication.logout.LogoutFilter@1005e86b, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@60597074, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71f7979c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c90da1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2740c91d, org.springframework.security.web.access.ExceptionTranslationFilter@74fb226d, org.springframework.security.web.access.intercept.AuthorizationFilter@5fa193e2]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.439+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.502+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.563+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.575+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.576+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.578+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.578+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.579+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.579+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.579+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.579+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.579+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.610+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.613+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.614+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.614+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759832463614 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.727+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.727+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832463727, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.729+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.729+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.768+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.768+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:03.779+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.230+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 10.846 seconds (process running for 1220.86)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.232+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.956+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.957+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.959+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832465959, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.959+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.962+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.975+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.988+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.989+05:30","@version":"1","message":"HikariPool-13 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.997+05:30","@version":"1","message":"HikariPool-13 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:05.998+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:08.999+05:30","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-0","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:09.000+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:09.003+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:09.005+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:09.005+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-223","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:11.505+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.235+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.235+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.272+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.274+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.274+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.274+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.274+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.895+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:12.907+05:30","@version":"1","message":"Finished Spring Data repository scanning in 9 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.075+05:30","@version":"1","message":"BeanFactory id=a9eabaa5-88ee-3805-9c8d-b1c87ccc995c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.167+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.172+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.176+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.182+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.185+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.187+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.192+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.197+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.212+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.215+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.215+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.216+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.231+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.241+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.244+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.246+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.248+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.251+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.255+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.259+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.261+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.499+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.500+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.500+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.500+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.561+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:13.563+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 1289 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:14.119+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:14.123+05:30","@version":"1","message":"HikariPool-14 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:14.147+05:30","@version":"1","message":"HikariPool-14 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70e7a6f3","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:14.148+05:30","@version":"1","message":"HikariPool-14 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:14.212+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:14.550+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:14.628+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:14.650+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:16.137+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:16.210+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@814c9cc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70147d51, org.springframework.security.web.context.SecurityContextHolderFilter@722531bc, org.springframework.security.web.header.HeaderWriterFilter@5e41a20e, org.springframework.web.filter.CorsFilter@701d61b4, org.springframework.security.web.authentication.logout.LogoutFilter@2e6bccb1, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@35ad95e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6620d213, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2bf55afe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@282ace61, org.springframework.security.web.access.ExceptionTranslationFilter@7eaecd19, org.springframework.security.web.access.intercept.AuthorizationFilter@2f3179b1]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.164+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.230+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.268+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.275+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.276+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.278+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.279+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.279+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.279+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.279+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.279+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.279+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.299+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.300+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.300+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.301+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759832478301 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.312+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.312+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832478312, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.313+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.321+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.322+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.327+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:18.338+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:19.156+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 9.925 seconds (process running for 1234.786)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:19.160+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.165+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.169+05:30","@version":"1","message":"Unregistering application CURRENCY-CONVERSION-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.170+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832481170, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.171+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.173+05:30","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.176+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.197+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.197+05:30","@version":"1","message":"HikariPool-14 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.205+05:30","@version":"1","message":"HikariPool-14 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:21.206+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:24.216+05:30","@version":"1","message":"task supervisor shutting down, can't accept the task","logger_name":"com.netflix.discovery.TimedSupervisorTask","thread_name":"DiscoveryClient-0","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:24.217+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:24.220+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:24.223+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:24.226+05:30","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"Thread-242","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:27.281+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.033+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.033+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.049+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.054+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.054+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.054+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.054+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.855+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:28.870+05:30","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.561+05:30","@version":"1","message":"BeanFactory id=a9eabaa5-88ee-3805-9c8d-b1c87ccc995c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.661+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.671+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.676+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.792+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.797+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.800+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$799/0x00000001005ef658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.808+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.820+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.835+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.841+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.843+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.860+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.888+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.936+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.952+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.957+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.971+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:29.975+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.011+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.092+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.095+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.684+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.691+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.692+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.692+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.798+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:30.798+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 2744 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:31.802+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:31.803+05:30","@version":"1","message":"HikariPool-15 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:31.819+05:30","@version":"1","message":"HikariPool-15 - Added connection com.mysql.cj.jdbc.ConnectionImpl@213de815","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:31.819+05:30","@version":"1","message":"HikariPool-15 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:31.883+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:32.805+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:33.134+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:33.216+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:35.203+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:35.304+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54d7a195, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22d71d77, org.springframework.security.web.context.SecurityContextHolderFilter@52acc228, org.springframework.security.web.header.HeaderWriterFilter@334744cc, org.springframework.web.filter.CorsFilter@3353f3da, org.springframework.security.web.authentication.logout.LogoutFilter@5445d41f, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@53d0e226, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@704ec8e8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b5bc49, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77c2cabf, org.springframework.security.web.access.ExceptionTranslationFilter@52f29094, org.springframework.security.web.access.intercept.AuthorizationFilter@2987a0b8]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.575+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.705+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.751+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.759+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.759+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.760+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.760+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.760+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.760+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.760+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.761+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.761+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.778+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.779+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.780+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.781+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759832497781 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.792+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.792+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832497792, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.793+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.812+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.813+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.814+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:37.824+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:38.778+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 14.317 seconds (process running for 1254.409)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:51:38.781+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:52:30.690+05:30","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-3].[localhost].[/]","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:52:30.690+05:30","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:52:30.693+05:30","@version":"1","message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8100-exec-1","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:52:30.899+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:52:30.899+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-1","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:52:33.977+05:30","@version":"1","message":"No servers available for service: currency-exchange-service","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-8100-exec-2","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:52:33.977+05:30","@version":"1","message":"Load balancer does not contain an instance for the service currency-exchange-service","logger_name":"org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient","thread_name":"http-nio-8100-exec-2","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:28.303+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:31.479+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:32.191+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:32.193+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:32.255+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:32.319+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:32.320+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:32.323+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:32.324+05:30","@version":"1","message":"Located environment: name=conversion-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:34.770+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:35.120+05:30","@version":"1","message":"Finished Spring Data repository scanning in 330 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:36.434+05:30","@version":"1","message":"BeanFactory id=a9eabaa5-88ee-3805-9c8d-b1c87ccc995c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.671+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.682+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.690+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.729+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.739+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.747+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$801/0x00000001005eeef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.776+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.798+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.816+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.822+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.825+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.828+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.867+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.899+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.906+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.911+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.928+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.933+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.941+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.957+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:37.966+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:40.006+05:30","@version":"1","message":"Tomcat initialized with port 8100 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:40.028+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:40.031+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:40.031+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:40.155+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:40.156+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 7820 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:43.434+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:43.518+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:44.087+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@755e79c4","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:44.090+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:45.796+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:46.888+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:47.006+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:47.142+05:30","@version":"1","message":"For 'currency-exchange-service' URL not provided. Will try picking an instance via load-balancing.","logger_name":"org.springframework.cloud.openfeign.FeignClientFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:53.089+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:53.361+05:30","@version":"1","message":"Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@483a8e65, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ef15a87, org.springframework.security.web.context.SecurityContextHolderFilter@d89e4ed, org.springframework.security.web.header.HeaderWriterFilter@868c22e, org.springframework.web.filter.CorsFilter@5a179e1b, org.springframework.security.web.authentication.logout.LogoutFilter@7ac9af32, com.demo.microservices.currencyconversionservice.filter.JwtRequestFilter@4100da57, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3da2a21c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a9b4cdb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2b4fccd1, org.springframework.security.web.access.ExceptionTranslationFilter@1d4b28fb, org.springframework.security.web.access.intercept.AuthorizationFilter@46b1dc7c]","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.139+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.302+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.459+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.602+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.611+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.645+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.645+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.645+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.646+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.646+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.646+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:56.646+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.064+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.069+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.073+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.085+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759832637084 with initial instances count: 4","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.100+05:30","@version":"1","message":"Registering application CURRENCY-CONVERSION-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.100+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759832637100, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.104+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.110+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8100\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.266+05:30","@version":"1","message":"Tomcat started on port 8100 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.270+05:30","@version":"1","message":"Updating port to 8100","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:57.293+05:30","@version":"1","message":"DiscoveryClient_CURRENCY-CONVERSION-SERVICE/host.docker.internal:CURRENCY-CONVERSION-SERVICE:8100 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:53:58.066+05:30","@version":"1","message":"Started CurrencyConversionServiceApplication in 32.161 seconds (process running for 33.581)","logger_name":"com.demo.microservices.currencyconversionservice.CurrencyConversionServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:54:13.578+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:54:17.531+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:54:18.276+05:30","@version":"1","message":"Located environment: name=CURRENCY-CONVERSION-SERVICE, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
{"@timestamp":"2025-10-07T15:54:18.278+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"conversion-service"}
