19:41:09.108 [restartedMain] INFO  c.s.g.GatewayserverApplication - Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 14340 (D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server\target\classes started by Gaurav in D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server)
19:41:09.114 [restartedMain] INFO  c.s.g.GatewayserverApplication - The following profiles are active: dev
19:41:09.325 [restartedMain] INFO  o.s.b.c.config.ConfigDataLoader - Fetching config from server at : http://localhost:8888
19:41:09.326 [restartedMain] INFO  o.s.b.c.config.ConfigDataLoader - Located environment: name=gatewayserver, profiles=[dev], label=null, version=cc317b3df78b04c72bdc54111558109eb108bf78, state=null
19:41:09.330 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
19:41:09.331 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
19:41:11.967 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
19:41:12.252 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 266 ms. Found 1 JPA repository interfaces.
19:41:12.893 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d
19:41:13.515 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:41:13.521 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:41:13.529 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:41:14.884 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
19:41:15.468 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
19:41:16.606 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
19:41:16.648 [restartedMain] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server\target\classes\com\sample\gatewayserver\config\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'jwtUtil'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtUtils': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.security.jwt.secret' in value "${spring.security.jwt.secret}"
19:41:16.649 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
19:41:16.657 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
19:41:16.672 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
19:41:16.709 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
19:41:16.748 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server\target\classes\com\sample\gatewayserver\config\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'jwtUtil'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtUtils': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.security.jwt.secret' in value "${spring.security.jwt.secret}"
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.sample.gatewayserver.GatewayserverApplication.main(GatewayserverApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter': Unsatisfied dependency expressed through field 'jwtUtil'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtUtils': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.security.jwt.secret' in value "${spring.security.jwt.secret}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtUtils': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.security.jwt.secret' in value "${spring.security.jwt.secret}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 39 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.security.jwt.secret' in value "${spring.security.jwt.secret}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:936)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	... 50 common frames omitted
20:52:59.776 [restartedMain] INFO  c.s.g.GatewayserverApplication - Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 1828 (D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server\target\classes started by Gaurav in D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server)
20:52:59.778 [restartedMain] INFO  c.s.g.GatewayserverApplication - The following profiles are active: dev
20:52:59.781 [restartedMain] INFO  o.s.b.c.config.ConfigDataLoader - Fetching config from server at : http://localhost:8888
20:52:59.781 [restartedMain] INFO  o.s.b.c.config.ConfigDataLoader - Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null
20:53:00.527 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20:53:00.547 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 1 JPA repository interfaces.
20:53:00.850 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d
20:53:00.928 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
20:53:00.933 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
20:53:00.937 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
20:53:01.078 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
20:53:01.106 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
20:53:01.161 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
20:53:01.304 [restartedMain] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: f17bb979-a33f-491c-bcce-54be9ed0ae49

20:53:02.404 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
20:53:02.404 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
20:53:02.405 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
20:53:02.405 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
20:53:02.405 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
20:53:02.405 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
20:53:02.405 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
20:53:02.405 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
20:53:02.405 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
20:53:02.406 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
20:53:02.406 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
20:53:02.406 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
20:53:02.406 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
20:53:03.692 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 29 endpoint(s) beneath base path '/actuator'
20:53:04.150 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
20:53:04.175 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
20:53:04.271 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
20:53:04.297 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
20:53:04.305 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
20:53:04.306 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
20:53:04.321 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
20:53:04.321 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
20:53:04.322 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
20:53:04.323 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
20:53:04.324 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
20:53:04.324 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
20:53:04.325 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
20:53:04.358 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
20:53:04.359 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
20:53:04.360 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
20:53:04.362 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1759591384361 with initial instances count: 2
20:53:04.374 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application GATEWAYSERVER with eureka with status UP
20:53:04.374 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1759591384374, current=UP, previous=STARTING]
20:53:04.379 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...
20:53:04.398 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8091
20:53:04.399 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8091
20:53:04.408 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204
20:53:05.018 [restartedMain] INFO  c.s.g.GatewayserverApplication - Started GatewayserverApplication in 6.904 seconds (JVM running for 126.684)
20:53:05.027 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CircuitBreakerAutoConfiguration.CircuitBreakerEndpointAutoConfiguration#circuitBreakerEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.circuitbreakers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CircuitBreakerAutoConfiguration.CircuitBreakerEndpointAutoConfiguration#circuitBreakerEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.circuitbreakerevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CircuitBreakerStreamEventsAutoConfiguration#circuitBreakerHystrixServerSideEventEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.hystrixstreamcircuitbreakerevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CircuitBreakerStreamEventsAutoConfiguration#circuitBreakerServerSideEventEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.streamcircuitbreakerevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration#featuresEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.features.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GatewayAutoConfiguration.GatewayActuatorConfiguration#gatewayControllerEndpoint matched:
      - @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched (OnPropertyCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.gateway.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name D:/Gaurav/Study/Programs/Backend Programs/microservice/microservice2/microservice_logs/gateway-server/application.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)
      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.reactive.DispatcherHandler; SearchStrategy: all) found bean 'webHandler' (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RateLimiterAutoConfiguration.RateLimiterEndpointAutoConfiguration#rateLimiterEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.ratelimiters.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   RateLimiterAutoConfiguration.RateLimiterEndpointAutoConfiguration#rateLimiterEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.ratelimiterevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   RetryAutoConfiguration.RetryAutoEndpointConfiguration#retryEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.retries.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   RetryAutoConfiguration.RetryAutoEndpointConfiguration#retryEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.retryevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration#serviceRegistryEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.serviceregistry.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TimeLimiterAutoConfiguration.TimeLimiterAutoEndpointConfiguration#timeLimiterEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.timelimiters.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   TimeLimiterAutoConfiguration.TimeLimiterAutoEndpointConfiguration#timeLimiterEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.timelimiterevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)


Negative matches:
-----------------

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.trace.http.HttpTraceRepository (OnBeanCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration:
      Did not match:
         - not a servlet web application (OnWebApplicationCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



20:53:26.484 [restartedMain] INFO  c.s.g.GatewayserverApplication - Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 13584 (D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server\target\classes started by Gaurav in D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server)
20:53:26.491 [restartedMain] INFO  c.s.g.GatewayserverApplication - The following profiles are active: dev
20:53:26.649 [restartedMain] INFO  o.s.b.c.config.ConfigDataLoader - Fetching config from server at : http://localhost:8888
20:53:26.652 [restartedMain] INFO  o.s.b.c.config.ConfigDataLoader - Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null
20:53:26.658 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
20:53:26.659 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
20:53:29.249 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
20:53:29.496 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 231 ms. Found 1 JPA repository interfaces.
20:53:30.235 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d
20:53:31.020 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
20:53:31.027 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
20:53:31.036 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
20:53:32.309 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
20:53:32.857 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
20:53:34.262 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
20:53:34.446 [restartedMain] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 4696038b-1516-49d2-80c6-694090e53630

20:53:37.642 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
20:53:37.644 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
20:53:37.645 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
20:53:37.645 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
20:53:37.645 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
20:53:37.645 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
20:53:37.645 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
20:53:37.645 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
20:53:37.646 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
20:53:37.646 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
20:53:37.646 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
20:53:37.646 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
20:53:37.646 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
20:53:41.119 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 29 endpoint(s) beneath base path '/actuator'
20:53:42.433 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
20:53:42.497 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
20:53:42.686 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
20:53:42.743 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
20:53:42.880 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
20:53:42.891 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
20:53:42.928 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
20:53:42.929 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
20:53:42.929 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
20:53:42.929 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
20:53:42.929 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
20:53:42.930 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
20:53:42.930 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
20:53:43.243 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
20:53:43.248 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
20:53:43.253 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
20:53:43.263 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1759591423261 with initial instances count: 2
20:53:43.279 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application GATEWAYSERVER with eureka with status UP
20:53:43.280 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1759591423280, current=UP, previous=STARTING]
20:53:43.284 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...
20:53:43.353 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204
20:53:43.707 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8091
20:53:43.709 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8091
20:53:44.348 [restartedMain] INFO  c.s.g.GatewayserverApplication - Started GatewayserverApplication in 20.688 seconds (JVM running for 22.54)
20:58:42.967 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
21:02:20.566 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
21:02:21.611 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [8bf3c30d-1]  500 Server Error for HTTP GET "/currency-converter-feign/from/USD/to/INR/quantity/100?Authorization=Bearer%20$2a$10$WUf3BdbOPJFT80dGUxezbeCQUlERxpIr3vwyU396Ci9IMqg91NHvC"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T15:32:21Z, a difference of 50616268 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/currency-converter-feign/from/USD/to/INR/quantity/100?Authorization=Bearer%20$2a$10$WUf3BdbOPJFT80dGUxezbeCQUlERxpIr3vwyU396Ci9IMqg91NHvC" [ExceptionHandlingWebHandler]
Stack trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:30)
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:25)
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:21)
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:54)
		at org.springframework.web.server.handler.DefaultWebFilterChain.invokeFilter(DefaultWebFilterChain.java:127)
		at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:121)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:362)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:227)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onSubscribe(MonoCollectList.java:79)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:301)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4361)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:938)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:654)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:478)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:545)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:217)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
21:03:36.803 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
21:03:36.817 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [8bf3c30d-2]  500 Server Error for HTTP GET "/currency-converter-feign/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTE5OTUsImV4cCI6MTc1OTYyNzk5NX0.l3cqfCZZznHKf48GdToTC6Rar72a7WDetStVZMChwz0"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T15:33:36Z, a difference of 50691810 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/currency-converter-feign/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTE5OTUsImV4cCI6MTc1OTYyNzk5NX0.l3cqfCZZznHKf48GdToTC6Rar72a7WDetStVZMChwz0" [ExceptionHandlingWebHandler]
Stack trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:30)
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:25)
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:21)
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:54)
		at org.springframework.web.server.handler.DefaultWebFilterChain.invokeFilter(DefaultWebFilterChain.java:127)
		at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:121)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:362)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:227)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onSubscribe(MonoCollectList.java:79)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:301)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4361)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:938)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:654)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:478)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:545)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:217)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
21:03:43.006 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
21:03:47.487 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
21:03:47.500 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [8bf3c30d-3]  500 Server Error for HTTP GET "/currency-converter-feign/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTE5OTUsImV4cCI6MTc1OTYyNzk5NX0.l3cqfCZZznHKf48GdToTC6Rar72a7WDetStVZMChwz0"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T15:33:47Z, a difference of 50702495 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/currency-converter-feign/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTE5OTUsImV4cCI6MTc1OTYyNzk5NX0.l3cqfCZZznHKf48GdToTC6Rar72a7WDetStVZMChwz0" [ExceptionHandlingWebHandler]
Stack trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:30)
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:25)
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:21)
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:54)
		at org.springframework.web.server.handler.DefaultWebFilterChain.invokeFilter(DefaultWebFilterChain.java:127)
		at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:121)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:362)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:227)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onSubscribe(MonoCollectList.java:79)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:301)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4361)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:938)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:654)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:478)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:545)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:217)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
21:04:29.504 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
21:04:29.513 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [8bf3c30d-4]  500 Server Error for HTTP GET "/currency-converter-feign/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTIwNDksImV4cCI6MTc1OTYyODA0OX0.0pg0WSAl_Tl8TomLLHaZr2Dm8kppoSJU67pGBChTcDY"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T15:34:29Z, a difference of 50744508 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/currency-converter-feign/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTIwNDksImV4cCI6MTc1OTYyODA0OX0.0pg0WSAl_Tl8TomLLHaZr2Dm8kppoSJU67pGBChTcDY" [ExceptionHandlingWebHandler]
Stack trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:30)
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:25)
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:21)
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:54)
		at org.springframework.web.server.handler.DefaultWebFilterChain.invokeFilter(DefaultWebFilterChain.java:127)
		at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:121)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:362)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:227)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onSubscribe(MonoCollectList.java:79)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:301)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:272)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4361)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:938)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:654)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:478)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:545)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:217)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
21:05:06.608 [Thread-1] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application GATEWAYSERVER with eureka with status DOWN
21:05:06.609 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1759592106609, current=DOWN, previous=UP]
21:05:06.610 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...
21:05:06.644 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204
21:05:06.700 [Thread-1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
21:05:06.745 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
21:05:06.818 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
21:05:08.902 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
21:05:11.923 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
21:05:11.940 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - deregister  status: 200
21:05:11.950 [Thread-1] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
{"@timestamp":"2025-10-04T21:05:15.374+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 13584 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:15.377+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:15.384+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:15.386+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:16.478+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:16.499+05:30","@version":"1","message":"Finished Spring Data repository scanning in 20 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:16.771+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:16.872+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:16.875+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:16.877+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:17.080+05:30","@version":"1","message":"HikariPool-2 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:17.135+05:30","@version":"1","message":"HikariPool-2 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:17.226+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:17.487+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 043c3282-0598-4bbb-b9b0-9bf629808eba\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.346+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.347+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.347+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.347+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.347+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.347+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.347+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.347+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.348+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.348+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.348+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.348+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:19.349+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:20.977+05:30","@version":"1","message":"Exposing 29 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.568+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.609+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.759+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.817+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.829+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.830+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.850+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.850+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.850+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.850+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.850+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.850+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.850+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.889+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.890+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.892+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.893+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759592121893 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.913+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.913+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759592121913, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:21.964+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:22.182+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:22.184+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:22.240+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:22.849+05:30","@version":"1","message":"Started GatewayserverApplication in 10.385 seconds (JVM running for 721.042)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:05:22.852+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.522+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.522+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 19 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 32 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.523+05:30","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.523+05:30","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.559+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.561+05:30","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.561+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.659+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.660+05:30","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.661+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.694+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 14668 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.716+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.907+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.907+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.912+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:52.913+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:56.530+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:57.036+05:30","@version":"1","message":"Finished Spring Data repository scanning in 485 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:57.692+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:58.524+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:58.530+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:06:58.536+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:00.027+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:00.729+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:02.362+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:02.467+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 7f992e98-c427-46eb-8fff-16455d1be9bf\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.333+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.333+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.334+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.334+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.334+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.334+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.334+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.334+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.335+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.335+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.335+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.335+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:05.335+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:07.508+05:30","@version":"1","message":"Exposing 29 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.043+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.104+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.328+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.390+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.570+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.579+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.693+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.694+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.695+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.696+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.696+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.696+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:09.696+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:10.961+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$bf8f94c1.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)\r\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.sample.gatewayserver.GatewayserverApplication.main(GatewayserverApplication.java:15)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 73 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 86 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:10.963+05:30","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:10.965+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$bf8f94c1.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)\r\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.sample.gatewayserver.GatewayserverApplication.main(GatewayserverApplication.java:15)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:10.966+05:30","@version":"1","message":"Initial registry fetch from primary servers failed","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:10.966+05:30","@version":"1","message":"Using default backup registry implementation which does not do anything.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:10.967+05:30","@version":"1","message":"Initial registry fetch from backup servers failed","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:10.971+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:10.996+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:11.010+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759592231008 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:11.106+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:11.108+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759592231107, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:11.163+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:11.227+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:11.228+05:30","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:11.231+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:11.231+05:30","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:12.605+05:30","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8091 is already in use","logger_name":"org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:12.615+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:12.620+05:30","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:12.646+05:30","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:14.685+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:17.701+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:17.726+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:596)\r\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.sample.gatewayserver.GatewayserverApplication.main(GatewayserverApplication.java:15)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 46 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 59 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:17.727+05:30","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:17.728+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - de-registration failedCannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:596)\r\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.sample.gatewayserver.GatewayserverApplication.main(GatewayserverApplication.java:15)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:17.736+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:17.771+05:30","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:17.813+05:30","@version":"1","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nWeb server failed to start. Port 8091 was already in use.\r\n\r\nAction:\r\n\r\nIdentify and stop the process that's listening on port 8091 or configure this application to listen on another port.\r\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"restartedMain","level":"ERROR","level_value":40000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:22.602+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 20 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 33 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:22.603+05:30","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:22.603+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:22.706+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 23 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 36 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:22.707+05:30","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:22.707+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:45.630+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 3512 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:45.651+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:45.755+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:45.756+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:45.758+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:07:45.758+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:06.357+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 8800 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:06.382+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:06.567+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:06.568+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:06.570+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:06.571+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:08.767+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:09.052+05:30","@version":"1","message":"Finished Spring Data repository scanning in 272 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:09.630+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:10.711+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:10.725+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:10.733+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:13.325+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:13.943+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:15.537+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:15.635+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 54f05739-dfdd-4c02-becf-83d3c91d448d\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.563+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.765+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.765+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.765+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.766+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.766+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.766+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.766+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.767+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.767+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.767+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.767+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:19.768+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:23.877+05:30","@version":"1","message":"Exposing 29 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:25.772+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:25.834+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.089+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.154+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.361+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.372+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.437+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.437+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.437+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.438+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.438+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.438+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.439+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.804+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$a3ee1d99.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)\r\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.sample.gatewayserver.GatewayserverApplication.main(GatewayserverApplication.java:15)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 73 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 86 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.805+05:30","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.806+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$a3ee1d99.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)\r\n\tat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:338)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)\r\n\tat com.sample.gatewayserver.GatewayserverApplication.main(GatewayserverApplication.java:15)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.807+05:30","@version":"1","message":"Initial registry fetch from primary servers failed","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.807+05:30","@version":"1","message":"Using default backup registry implementation which does not do anything.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.808+05:30","@version":"1","message":"Initial registry fetch from backup servers failed","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.810+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.819+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.837+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759592306834 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.861+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.863+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759592306863, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.867+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.940+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 22 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/sun.nio.ch.Net.connect0(Native Method)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:579)\r\n\tat java.base/sun.nio.ch.Net.connect(Net.java:568)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:593)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 35 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.940+05:30","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.943+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:26.944+05:30","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:27.567+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:27.581+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:43.843+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 2696 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:43.860+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:43.965+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:43.966+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:43.968+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:43.969+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:46.328+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:46.691+05:30","@version":"1","message":"Finished Spring Data repository scanning in 345 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:47.467+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:48.163+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:48.169+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:48.174+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:49.485+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:50.031+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:51.377+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:08:51.521+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 4c1b5c74-94de-4e9a-be60-ead225ac6dae\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:09:59.392+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 8412 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:09:59.408+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:09:59.515+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:09:59.516+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:09:59.519+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:09:59.519+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:02.124+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:02.464+05:30","@version":"1","message":"Finished Spring Data repository scanning in 323 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:03.173+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:03.998+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:04.007+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:04.025+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:05.581+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:06.633+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:08.633+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:09.136+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: c031225d-6169-4351-82f5-3a9eed35438f\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.686+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.687+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.687+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.687+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.687+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.687+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.687+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.688+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.688+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.688+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.688+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.688+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:10:13.688+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:02.824+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 9520 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:02.842+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:02.960+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:02.960+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:02.963+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:02.963+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:05.439+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:05.793+05:30","@version":"1","message":"Finished Spring Data repository scanning in 331 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:06.410+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:07.164+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:07.172+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:07.180+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:08.639+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:09.252+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:10.984+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:12.305+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: a15c3974-a3f6-4142-aff6-56edab537061\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.604+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.604+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.604+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.604+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.605+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.605+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.605+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.605+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.605+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.605+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.605+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.606+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:23.606+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:28.348+05:30","@version":"1","message":"Exposing 29 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:30.671+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:30.735+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.061+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.274+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.543+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.554+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.647+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.649+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.649+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.649+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.649+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.650+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:31.651+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.273+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.277+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.288+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.303+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759592492300 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.317+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.318+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759592492318, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.321+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.404+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.793+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:32.795+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:11:33.392+05:30","@version":"1","message":"Started GatewayserverApplication in 33.916 seconds (JVM running for 35.718)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:14.653+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 13416 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:14.664+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:14.747+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:14.747+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:14.749+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:14.749+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:17.037+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:17.502+05:30","@version":"1","message":"Finished Spring Data repository scanning in 450 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:18.486+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:20.001+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:20.006+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:20.011+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:22.060+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:22.572+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:23.708+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:23.793+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 53f24991-6888-4047-bb5c-271e0d774ffb\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.039+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.039+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.039+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.039+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.039+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.039+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.040+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.040+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.040+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.040+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.040+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.040+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:26.040+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:27.951+05:30","@version":"1","message":"Exposing 29 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.321+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.482+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.653+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.702+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.831+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.838+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.874+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.874+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.874+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.875+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.875+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.875+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:29.875+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.168+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.172+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.177+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.184+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759592550183 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.200+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.201+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759592550201, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.208+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.308+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.653+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:30.655+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:12:31.340+05:30","@version":"1","message":"Started GatewayserverApplication in 19.308 seconds (JVM running for 20.601)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:19.326+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 12280 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:19.345+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:19.552+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:19.552+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:19.557+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:19.558+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:23.514+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:23.938+05:30","@version":"1","message":"Finished Spring Data repository scanning in 409 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:24.480+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:25.063+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:25.069+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:25.074+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:26.489+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:27.281+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:29.068+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:29.204+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: e41f4ba4-e05f-42b0-923f-f29b66cb7eae\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.691+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.692+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.692+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.692+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.693+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.693+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.693+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.693+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.694+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.694+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.694+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.694+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:32.695+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:34.826+05:30","@version":"1","message":"Exposing 29 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:36.467+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:36.537+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:36.871+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.136+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.411+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.420+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.467+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.468+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.468+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.468+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.468+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.468+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.469+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.920+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.926+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.930+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.948+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759592677946 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.964+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.964+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759592677964, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:37.968+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:38.142+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:38.812+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:38.814+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:14:39.440+05:30","@version":"1","message":"Started GatewayserverApplication in 23.449 seconds (JVM running for 24.923)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:41.452+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 on GAURAV-KHAIRNAR with PID 9764 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:41.488+05:30","@version":"1","message":"The following profiles are active: dev","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:41.609+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:41.610+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=783c99661d54f72caec88683b1cb183d3a6a94b3, state=null","logger_name":"org.springframework.boot.context.config.ConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:41.612+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:41.612+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:44.082+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:44.305+05:30","@version":"1","message":"Finished Spring Data repository scanning in 210 ms. Found 1 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:44.844+05:30","@version":"1","message":"BeanFactory id=ad392adb-11e9-3abb-8d74-ea135547bb5d","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:45.388+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:45.394+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:45.399+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:47.032+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:47.837+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:49.428+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:49.528+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: c7c29838-26ef-47a6-bafe-c0792a020584\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.228+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.229+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.229+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.229+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.230+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.230+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.230+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.230+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.230+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.231+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.231+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.231+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:52.231+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:54.057+05:30","@version":"1","message":"Exposing 29 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.427+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.562+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.723+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.772+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.889+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.896+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.936+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.937+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.937+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.937+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.937+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.937+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:55.937+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.252+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.257+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.260+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.267+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759592816266 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.281+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.281+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759592816281, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.286+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.343+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.691+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:56.693+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:16:57.322+05:30","@version":"1","message":"Started GatewayserverApplication in 18.819 seconds (JVM running for 19.94)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:05.6346377+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 16064 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:05.6516343+05:30","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:05.7296342+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:05.7306348+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=375b660ad639a01052d22d736b00de92da12d5bf, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:05.7326345+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:05.7336348+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:08.0326377+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:08.2696339+05:30","@version":"1","message":"Finished Spring Data repository scanning in 221 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:08.9646331+05:30","@version":"1","message":"BeanFactory id=8351a8dc-cd21-3a93-9456-25c7de24b184","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.5826402+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.5946358+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6036372+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6286345+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6376375+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6416349+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$762/0x00000001006239f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6496357+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6716363+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6876349+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6926363+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6936349+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.6946359+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7136627+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7366324+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7426341+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7456352+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7526381+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7566368+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7656393+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7726343+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:09.7786372+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:11.2056343+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:11.2516372+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:11.8066355+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b389950","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:11.8096396+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:14.3946343+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:15.3026364+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 8961ea43-59ea-43e7-a767-77770c7b3a5d\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.7936318+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.794634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.795634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:18.795634+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:20.3186356+05:30","@version":"1","message":"Exposing 4 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:24.4326344+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:24.5456363+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:24.7326432+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:24.9506371+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.1836344+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.1926529+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.2446353+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.2446353+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.2446353+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.2446353+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.2446353+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.2456352+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.2456352+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.6326323+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.635633+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.639634+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.6466346+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759595245645 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.6646341+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.6656337+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759595245664, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.6676355+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:25.7526408+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:26.1286402+05:30","@version":"1","message":"Netty started on port 8080","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:26.1316341+05:30","@version":"1","message":"Updating port to 8080","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:27.2246355+05:30","@version":"1","message":"Started GatewayserverApplication in 25.163 seconds (process running for 26.53)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:59.4130412+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 15500 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:59.4550431+05:30","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:59.5480443+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:59.5480443+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=375b660ad639a01052d22d736b00de92da12d5bf, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:59.5510437+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:57:59.552046+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:01.7080413+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:01.9330758+05:30","@version":"1","message":"Finished Spring Data repository scanning in 210 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:02.62704+05:30","@version":"1","message":"BeanFactory id=8351a8dc-cd21-3a93-9456-25c7de24b184","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.2610461+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.2700418+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.2780423+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3010407+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3080414+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.312046+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$762/0x0000000100622a18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3310418+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3430448+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3600429+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3650444+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3660447+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3680439+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.3860419+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.4040429+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.4100453+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.4140441+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.420042+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.4230419+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.4320481+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.4370436+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:03.4410452+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:04.9940755+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:05.0480448+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:05.5750745+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7837e2b9","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:05.578073+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:07.3870707+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:07.6240413+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 9af68001-36db-418b-afb7-b2bd07d7e058\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:27.0382338+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 15112 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:27.0572361+05:30","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:27.1762359+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:27.1762359+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=375b660ad639a01052d22d736b00de92da12d5bf, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:27.1802318+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:27.1812322+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:29.7252337+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:30.2452301+05:30","@version":"1","message":"Finished Spring Data repository scanning in 503 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.1392333+05:30","@version":"1","message":"BeanFactory id=8351a8dc-cd21-3a93-9456-25c7de24b184","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.8032369+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.8342373+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.8422335+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.8702376+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.8792361+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.8852353+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$762/0x0000000100622a18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.8952338+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.9122572+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.9292341+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.9372443+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.9402366+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.9412367+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.9652327+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.9922328+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:31.9982338+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:32.0032369+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:32.012233+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:32.0152378+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:32.026235+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:32.0332328+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:32.0382317+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:33.7422325+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:33.8112461+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:34.898235+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@751adec2","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:34.9022378+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:36.9272343+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:37.135234+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 6eca6178-1c90-457a-865e-a5cd479db3b8\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0592331+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0592331+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0592331+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0592331+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:41.0602344+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:58:42.9745891+05:30","@version":"1","message":"Exposing 4 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:12.8962488+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 11152 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:12.9262475+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:13.1002479+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:13.1002479+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=375b660ad639a01052d22d736b00de92da12d5bf, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:13.1002479+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:13.1002479+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=375b660ad639a01052d22d736b00de92da12d5bf, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:13.1062484+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:13.1062484+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:15.5492516+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:15.842252+05:30","@version":"1","message":"Finished Spring Data repository scanning in 277 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:17.313249+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.5412486+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.5702524+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.5882479+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.6672547+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.6852509+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.7092507+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$763/0x000000010062b9f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.724248+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.747248+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.8132484+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.8222585+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.8282501+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.8432483+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:18.9522514+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:19.0042488+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:19.0132507+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:19.0172505+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:19.0292517+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:19.0532493+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:19.0872503+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:19.1002508+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:19.1102531+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:21.6582502+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:21.7112565+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:22.361251+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@638b56ee","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:22.363251+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:24.1960657+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:24.3560488+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: c6a41c56-62fc-43ac-a617-76f3277ee51a\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9570475+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9570475+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T21:59:27.9580479+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
22:27:28.488 [restartedMain] INFO  c.s.g.GatewayserverApplication - Starting GatewayserverApplication using Java 17.0.10 with PID 7068 (D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server\target\classes started by Gaurav in D:\Gaurav\Study\Programs\Backend Programs\microservice\microservice2\spring-cloud-gateway-server)
22:27:28.491 [restartedMain] INFO  c.s.g.GatewayserverApplication - The following 1 profile is active: "dev"
22:27:28.512 [restartedMain] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
22:27:28.512 [restartedMain] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=gatewayserver, profiles=[default], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null
22:27:28.512 [restartedMain] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
22:27:28.512 [restartedMain] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=gatewayserver, profiles=[dev], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null
22:27:29.293 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
22:27:29.313 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 1 JPA repository interface.
22:27:29.487 [restartedMain] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a
22:27:29.588 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
22:27:29.594 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.603 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.624 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.631 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.639 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$676/0x00000001005b10f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.656 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.667 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.681 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.850 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.923 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.961 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:29.994 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:30.012 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:30.018 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:30.075 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:30.092 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:30.094 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:30.100 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
22:27:30.104 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:30.111 [restartedMain] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
22:27:30.489 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
22:27:30.495 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
22:27:30.532 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6822f544
22:27:30.532 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
22:27:30.606 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
22:27:30.802 [restartedMain] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 4767412b-a431-4212-81b3-6095d52adcb0

22:27:32.449 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [After]
22:27:32.449 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Before]
22:27:32.449 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Between]
22:27:32.450 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Cookie]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Header]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Host]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Method]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Path]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Query]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [ReadBody]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [RemoteAddr]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
22:27:32.451 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [Weight]
22:27:32.452 [restartedMain] INFO  o.s.c.g.r.RouteDefinitionRouteLocator - Loaded RoutePredicateFactory [CloudFoundryRouteService]
22:27:33.912 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 30 endpoint(s) beneath base path '/actuator'
22:27:34.679 [restartedMain] WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
22:27:34.728 [restartedMain] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
22:27:34.775 [restartedMain] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
22:27:34.809 [restartedMain] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
22:27:34.818 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
22:27:34.821 [restartedMain] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
22:27:34.835 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
22:27:34.835 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
22:27:34.835 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
22:27:34.836 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
22:27:34.836 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
22:27:34.836 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
22:27:34.836 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
22:27:34.877 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
22:27:34.880 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
22:27:34.883 [restartedMain] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
22:27:34.885 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1759597054885 with initial instances count: 2
22:27:34.901 [restartedMain] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application GATEWAYSERVER with eureka with status UP
22:27:34.902 [restartedMain] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1759597054901, current=UP, previous=STARTING]
22:27:34.903 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...
22:27:34.931 [restartedMain] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8091
22:27:34.933 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204
22:27:34.936 [restartedMain] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8091
22:27:35.629 [restartedMain] INFO  c.s.g.GatewayserverApplication - Started GatewayserverApplication in 9.649 seconds (process running for 46.021)
22:27:35.638 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   BulkheadAutoConfiguration.BulkheadEndpointAutoConfiguration#bulkheadEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BulkheadAutoConfiguration.BulkheadEndpointAutoConfiguration#bulkheadEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CircuitBreakerAutoConfiguration.CircuitBreakerEndpointAutoConfiguration#circuitBreakerEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CircuitBreakerAutoConfiguration.CircuitBreakerEndpointAutoConfiguration#circuitBreakerEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CircuitBreakerStreamEventsAutoConfiguration#circuitBreakerHystrixServerSideEventEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CircuitBreakerStreamEventsAutoConfiguration#circuitBreakerServerSideEventEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CommonsClientAutoConfiguration.ActuatorConfiguration#featuresEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.name D:/Gaurav/Study/Programs/Backend Programs/microservice/microservice2/microservice_logs/gateway-server/application.log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)
      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.reactive.DispatcherHandler; SearchStrategy: all) found bean 'webHandler' (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RateLimiterAutoConfiguration.RateLimiterEndpointAutoConfiguration#rateLimiterEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   RateLimiterAutoConfiguration.RateLimiterEndpointAutoConfiguration#rateLimiterEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   RetryAutoConfiguration.RetryAutoEndpointConfiguration#retryEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   RetryAutoConfiguration.RetryAutoEndpointConfiguration#retryEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServiceRegistryAutoConfiguration.ServiceRegistryEndpointConfiguration#serviceRegistryEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TimeLimiterAutoConfiguration.TimeLimiterAutoEndpointConfiguration#timeLimiterEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   TimeLimiterAutoConfiguration.TimeLimiterAutoEndpointConfiguration#timeLimiterEventsEndpoint matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)


Negative matches:
-----------------

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration:
      Did not match:
         - not a servlet web application (OnWebApplicationCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



22:27:48.560 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
22:27:48.649 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [071df5f7-1]  500 Server Error for HTTP GET "/currency-converter/from/USD/to/INR/quantity/100"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:57:48Z, a difference of 55743611 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/currency-converter/from/USD/to/INR/quantity/100" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22) ~[classes/:na]
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46) ~[classes/:na]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157) ~[spring-security-web-6.2.1.jar:6.2.1]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]
22:27:53.193 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
22:27:53.197 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [071df5f7-2]  500 Server Error for HTTP GET "/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTIwNDksImV4cCI6MTc1OTYyODA0OX0.0pg0WSAl_Tl8TomLLHaZr2Dm8kppoSJU67pGBChTcDY"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:57:53Z, a difference of 55748195 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTIwNDksImV4cCI6MTc1OTYyODA0OX0.0pg0WSAl_Tl8TomLLHaZr2Dm8kppoSJU67pGBChTcDY" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22) ~[classes/:na]
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46) ~[classes/:na]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157) ~[spring-security-web-6.2.1.jar:6.2.1]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]
22:27:58.783 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
22:27:58.788 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [071df5f7-3]  500 Server Error for HTTP GET "/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTIwNDksImV4cCI6MTc1OTYyODA0OX0.0pg0WSAl_Tl8TomLLHaZr2Dm8kppoSJU67pGBChTcDY"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:57:58Z, a difference of 55753785 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTIwNDksImV4cCI6MTc1OTYyODA0OX0.0pg0WSAl_Tl8TomLLHaZr2Dm8kppoSJU67pGBChTcDY" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22) ~[classes/:na]
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46) ~[classes/:na]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157) ~[spring-security-web-6.2.1.jar:6.2.1]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]
22:27:59.250 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
22:27:59.255 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [071df5f7-4]  500 Server Error for HTTP GET "/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTIwNDksImV4cCI6MTc1OTYyODA0OX0.0pg0WSAl_Tl8TomLLHaZr2Dm8kppoSJU67pGBChTcDY"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:57:59Z, a difference of 55754253 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTIwNDksImV4cCI6MTc1OTYyODA0OX0.0pg0WSAl_Tl8TomLLHaZr2Dm8kppoSJU67pGBChTcDY" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22) ~[classes/:na]
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46) ~[classes/:na]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157) ~[spring-security-web-6.2.1.jar:6.2.1]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]
22:28:20.672 [reactor-http-nio-3] INFO  c.s.g.f.JwtAuthenticationFilter - Authorization Header:
22:28:20.677 [reactor-http-nio-3] ERROR o.s.b.a.w.r.e.AbstractErrorWebExceptionHandler - [071df5f7-5]  500 Server Error for HTTP GET "/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs"
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:20Z, a difference of 55775675 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP GET "/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589) ~[jjwt-impl-0.11.5.jar:0.11.5]
		at com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26) ~[classes/:na]
		at com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22) ~[classes/:na]
		at com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46) ~[classes/:na]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163) ~[spring-security-web-6.2.1.jar:6.2.1]
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157) ~[spring-security-web-6.2.1.jar:6.2.1]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55) ~[reactor-core-3.6.2.jar:3.6.2]
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238) ~[reactor-netty-http-1.1.15.jar:1.1.15]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.105.Final.jar:4.1.105.Final]
		at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]
22:28:30.685 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 4 class path changes (3 additions, 0 deletions, 1 modification)
22:28:30.687 [Thread-8] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application GATEWAYSERVER with eureka with status DOWN
22:28:30.687 [Thread-8] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1759597110687, current=DOWN, previous=UP]
22:28:30.688 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...
22:28:30.718 [Thread-8] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
22:28:30.723 [Thread-8] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
22:28:30.750 [Thread-8] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
22:28:30.753 [Thread-8] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
22:28:30.776 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204
22:28:30.778 [Thread-8] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
22:28:30.804 [Thread-8] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - deregister  status: 200
22:28:30.811 [Thread-8] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
{"@timestamp":"2025-10-04T22:28:33.408+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 7068 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:33.411+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:33.419+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:33.419+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:33.419+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:33.420+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.310+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.322+05:30","@version":"1","message":"Finished Spring Data repository scanning in 11 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.464+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.538+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.543+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.547+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.554+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.557+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.559+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$676/0x00000001005b10f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.565+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.570+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.576+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.579+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.580+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.580+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.586+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.595+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.599+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.609+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.612+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.614+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.618+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.621+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.623+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.828+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.830+05:30","@version":"1","message":"HikariPool-3 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.852+05:30","@version":"1","message":"HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@247fc05e","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.852+05:30","@version":"1","message":"HikariPool-3 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:34.902+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:35.018+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 342b42fe-89d1-4c5a-95d7-6e1397cbc2b4\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.420+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.421+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.421+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.422+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.422+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.422+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.422+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.423+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.423+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.423+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.424+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.424+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.424+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:36.424+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:37.777+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.396+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.440+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.500+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.558+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.566+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.566+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.569+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.569+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.570+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.570+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.570+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.570+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.570+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.626+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.628+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.630+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.631+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759597118631 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.647+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.647+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759597118647, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.648+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.674+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.676+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:38.678+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:39.261+05:30","@version":"1","message":"Started GatewayserverApplication in 8.292 seconds (process running for 109.654)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:39.265+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:47.636+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:47.642+05:30","@version":"1","message":"[db213eb3-6]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:47Z, a difference of 55802640 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:50.031+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:50.037+05:30","@version":"1","message":"[db213eb3-7]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:50Z, a difference of 55805033 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:51.029+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:51.034+05:30","@version":"1","message":"[db213eb3-8]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:51Z, a difference of 55806031 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:51.908+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:51.914+05:30","@version":"1","message":"[db213eb3-9]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:51Z, a difference of 55806912 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:53.673+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:53.676+05:30","@version":"1","message":"[db213eb3-10]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:53Z, a difference of 55808675 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:54.551+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:54.554+05:30","@version":"1","message":"[db213eb3-11]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:54Z, a difference of 55809553 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:55.451+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:55.456+05:30","@version":"1","message":"[db213eb3-12]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:55Z, a difference of 55810454 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:56.185+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:56.187+05:30","@version":"1","message":"[db213eb3-13]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:56Z, a difference of 55811186 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:59.683+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:28:59.687+05:30","@version":"1","message":"[db213eb3-14]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:58:59Z, a difference of 55814684 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:00.672+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:00.675+05:30","@version":"1","message":"[db213eb3-15]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:59:00Z, a difference of 55815674 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:08.279+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:08.285+05:30","@version":"1","message":"[db213eb3-16]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:59:08Z, a difference of 55823284 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:09.119+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:09.122+05:30","@version":"1","message":"[db213eb3-17]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:59:09Z, a difference of 55824121 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:10.700+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:10.703+05:30","@version":"1","message":"[db213eb3-18]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:59:10Z, a difference of 55825702 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:11.720+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:29:11.724+05:30","@version":"1","message":"[db213eb3-19]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T16:59:11Z, a difference of 55826722 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:30:14.773+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:30:14.778+05:30","@version":"1","message":"[db213eb3-20]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:00:14Z, a difference of 55889776 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:30:18.855+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:30:18.858+05:30","@version":"1","message":"[db213eb3-21]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:00:18Z, a difference of 55893857 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:30:20.949+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:30:20.954+05:30","@version":"1","message":"[db213eb3-22]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:00:20Z, a difference of 55895951 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:30:22.836+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:30:22.841+05:30","@version":"1","message":"[db213eb3-23]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:00:22Z, a difference of 55897839 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:51.187+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 9688 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:51.201+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:51.307+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:51.308+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:51.309+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:51.309+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:51.313+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:51.314+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:53.756+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:54.024+05:30","@version":"1","message":"Finished Spring Data repository scanning in 251 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:55.178+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.080+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.091+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.100+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.129+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.141+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.145+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$765/0x000000010063c738] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.162+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.178+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.196+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.202+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.204+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.205+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.224+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.247+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.253+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.258+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.264+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.269+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.277+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.285+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:56.296+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:58.120+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:58.191+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:59.070+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@21d6dcc2","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:31:59.076+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:01.290+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:01.478+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 92f6b206-4a4d-4d33-9594-c80b60fc3f7d\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.351+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.352+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.352+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.352+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.352+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.352+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.352+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.353+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.353+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.353+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.353+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.353+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.353+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:04.353+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:07.674+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:12.616+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:12.715+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:12.850+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.085+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.289+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.319+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.368+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.369+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.369+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.369+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.369+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.371+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.372+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.951+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.957+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.962+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:13.970+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759597333969 with initial instances count: 4","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:14.000+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:14.000+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759597334000, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:14.003+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:14.147+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:14.899+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:14.902+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:32:15.531+05:30","@version":"1","message":"Started GatewayserverApplication in 28.828 seconds (process running for 30.317)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:12.270+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 2724 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:12.288+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:12.395+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:12.395+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:12.395+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:12.395+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:12.401+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:12.401+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:14.755+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:14.960+05:30","@version":"1","message":"Finished Spring Data repository scanning in 193 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:15.654+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.290+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.301+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.309+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.339+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.351+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.355+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$758/0x00000001006297b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.364+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.380+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.408+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.415+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.417+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.418+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.442+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.465+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.472+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.476+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.482+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.485+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.493+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.498+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:16.504+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:18.099+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:18.153+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:18.653+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35ae591a","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:18.656+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:20.871+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:21.084+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 75bbeb31-0426-4a6f-927d-6c5c52398067\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.790+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.791+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.791+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.791+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.793+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.793+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.793+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.793+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.793+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.794+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.794+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.794+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.794+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:24.794+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:26.899+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:28.661+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:28.737+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:28.830+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:28.948+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.109+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.121+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.170+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.170+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.170+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.171+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.171+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.171+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.171+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.587+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.594+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.600+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.612+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759597469612 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.637+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.637+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759597469637, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.647+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:29.727+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:30.071+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:30.073+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:34:30.735+05:30","@version":"1","message":"Started GatewayserverApplication in 22.802 seconds (process running for 23.941)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:28.448+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 18564 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:28.511+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:28.612+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:28.613+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:28.613+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:28.613+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=bcf3352dc5506f304112e034ef8bc37d1eedf450, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:28.619+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:28.619+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:31.578+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:31.895+05:30","@version":"1","message":"Finished Spring Data repository scanning in 303 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:32.822+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.563+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.581+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.591+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.615+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.622+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.626+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$758/0x000000010062a0b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.634+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.653+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.667+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.673+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.674+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.676+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.693+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.714+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.719+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.722+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.729+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.732+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.741+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.747+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:33.752+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:35.515+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:35.567+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:36.111+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1cca0bf9","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:36.114+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:38.206+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:38.394+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 2b958417-c6de-4a8c-a7f0-69f917b6bca2\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.394+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.395+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.395+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.396+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.396+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.396+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.397+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.397+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.400+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.401+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.401+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.401+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.401+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:41.401+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:37:43.612+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:37.792+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 9956 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:37.806+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:37.886+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:37.886+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:37.887+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:37.887+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:37.890+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:37.890+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:40.262+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:40.483+05:30","@version":"1","message":"Finished Spring Data repository scanning in 205 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:41.091+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.027+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.036+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.043+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.072+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.078+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.090+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$758/0x0000000100609a10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.100+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.114+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.130+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.135+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.137+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.138+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.158+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.178+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.183+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.187+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.194+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.197+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.205+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.211+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:42.217+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:43.838+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:43.894+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:44.406+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7dfac2b9","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:44.415+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:46.178+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:46.354+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: f4926088-c0ed-4376-92e0-654ca6345784\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.971+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.972+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.972+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.972+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.972+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.972+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.972+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.972+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.974+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.974+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.974+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.974+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.974+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:49.974+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:52.028+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:53.865+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:53.932+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.018+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.149+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.275+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.283+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.321+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.321+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.321+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.322+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.322+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.322+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.322+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.693+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.696+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.701+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.707+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759598034706 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.724+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.725+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759598034725, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.729+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:54.797+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:55.150+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:55.153+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:43:55.762+05:30","@version":"1","message":"Started GatewayserverApplication in 22.05 seconds (process running for 24.679)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:16.726+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:16.834+05:30","@version":"1","message":"[e9816c1c-1]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:14:16Z, a difference of 56731780 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:36.758+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 18272 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:36.784+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:36.905+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:36.906+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:36.906+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:36.907+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:36.909+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:36.910+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:40.469+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:40.830+05:30","@version":"1","message":"Finished Spring Data repository scanning in 336 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:43.982+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.360+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.375+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.384+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.424+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.433+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.442+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$765/0x000000010063ac58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.462+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.487+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.511+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.519+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.522+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.524+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.562+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.591+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.597+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.600+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.608+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.613+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.624+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.631+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:45.638+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:47.760+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:47.875+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:48.640+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6a190cb9","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:48.643+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:52.730+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:52.990+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 3356b5a7-82e0-40a4-a264-328d2dd4d5e5\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.337+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.337+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.337+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.337+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.337+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.337+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.338+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.338+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.338+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.338+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.338+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.338+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.338+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:56.338+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:44:59.136+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.284+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.389+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.507+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.643+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.784+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.793+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.830+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.830+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.830+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.830+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.830+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.830+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:01.831+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.245+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.250+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.261+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.273+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759598102272 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.296+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.296+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759598102296, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.299+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.366+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.668+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:02.670+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:03.522+05:30","@version":"1","message":"Started GatewayserverApplication in 30.941 seconds (process running for 32.43)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:25.946+05:30","@version":"1","message":"[2fee1647, L:/192.168.29.167:8091 - R:/192.168.29.167:54311] Decoding failed: FULL_REQUEST(decodeResult: failure(java.lang.IllegalArgumentException: text is empty (possibly HTTP/0.9)), version: HTTP/1.0, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))\r\nGET /bad-request HTTP/1.0","logger_name":"reactor.netty.http.server.HttpServerOperations","thread_name":"reactor-http-nio-4","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:45:25.980+05:30","@version":"1","message":"[e2d3be49, L:/192.168.29.167:8091 - R:/192.168.29.167:54312] Decoding failed: FULL_REQUEST(decodeResult: failure(java.lang.IllegalArgumentException: invalid version format: ÑÇÒJ8\u0017.Â[FÒ±ΜÅ¯Ø\b\u001A½\u0019ÛFSO¶'\u0000 ÚÚ\u0013\u0001\u0013\u0002\u0013\u0003À+À/À,À0Ì©Ì¨À\u0013À\u0014\u0000\u0000\u0000/\u00005\u0001\u0000\u0006SÊÊ\u0000\u0000Þ\r\u0000Ú\u0000\u0000\u0001\u0000\u0001Ÿ\u0000 ^WÁÈŸ¥U§2Ç}\u000BÉE0 %À®), version: HTTP/1.0, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))\r\nGET /bad-request HTTP/1.0","logger_name":"reactor.netty.http.server.HttpServerOperations","thread_name":"reactor-http-nio-1","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:46:01.273+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:46:01.373+05:30","@version":"1","message":"[de0a27f7-1]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:16:01Z, a difference of 56836323 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:46:03.478+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:46:03.483+05:30","@version":"1","message":"[de0a27f7-2]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:16:03Z, a difference of 56838481 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:46:07.382+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:46:07.387+05:30","@version":"1","message":"[de0a27f7-3]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:16:07Z, a difference of 56842385 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:46:41.420+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:13.615+05:30","@version":"1","message":"[de0a27f7-4]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:16:53Z, a difference of 56888725 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:20.787+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:34.989+05:30","@version":"1","message":"[de0a27f7-5]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:17:34Z, a difference of 56929987 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.611+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.654+05:30","@version":"1","message":"Unregistering application GATEWAYSERVER with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.660+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759598259660, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.660+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.709+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.821+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.843+05:30","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.891+05:30","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:39.893+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:42.914+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:42.945+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:42.960+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:52.732+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 18272 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:52.732+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:52.738+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:52.738+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:52.738+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:52.738+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.194+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.211+05:30","@version":"1","message":"Finished Spring Data repository scanning in 16 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.505+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.662+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.671+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.679+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.696+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.702+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.705+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$765/0x000000010063ac58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.720+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.731+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.743+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.752+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.754+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.755+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.773+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.797+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.804+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.810+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.817+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.821+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.836+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.844+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:54.850+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:55.224+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:55.225+05:30","@version":"1","message":"HikariPool-2 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:55.251+05:30","@version":"1","message":"HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@dab018b","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:55.251+05:30","@version":"1","message":"HikariPool-2 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:55.398+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:55.829+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 70a6bcc4-c827-4570-8757-43ba5e81e0b5\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.292+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.292+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.292+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.293+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:47:58.295+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:00.266+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:01.828+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:01.947+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.029+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.079+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.087+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.088+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.103+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.104+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.104+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.104+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.104+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.104+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.104+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.178+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.180+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.181+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.182+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759598282182 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.202+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.202+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759598282202, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.223+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.288+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.296+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:02.297+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:03.160+05:30","@version":"1","message":"Started GatewayserverApplication in 20.03 seconds (process running for 212.068)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:03.166+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:14.201+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:48:21.169+05:30","@version":"1","message":"[124c1503-6]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-10-04T01:28:45Z. Current time: 2025-10-04T17:18:21Z, a difference of 56976167 milliseconds.  Allowed clock skew: 0 milliseconds.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100?Authorization=Bearer%20eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJnYXVyYXYiLCJpYXQiOjE3NTk1OTcwOTAsImV4cCI6MTc1OTYzMzA5MH0.o9k1IuJcPiqDj848OVkhIxK6fXjQoAX1N0hoFWCrISs\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:49:01.399+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:49:09.353+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:49:58.699+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:50:00.906+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:50:01.956+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:50:03.541+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:50:08.772+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:50:09.795+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:50:10.937+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:50:24.453+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:51:05.962+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:51:18.984+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:53:02.127+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:53:24.044+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.010+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.027+05:30","@version":"1","message":"Unregistering application GATEWAYSERVER with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.028+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759598704028, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.029+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.044+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.103+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.109+05:30","@version":"1","message":"HikariPool-2 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.156+05:30","@version":"1","message":"HikariPool-2 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:04.161+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:07.218+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:07.232+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:07.253+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:12.425+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 18272 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:12.425+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:12.432+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:12.432+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:12.432+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:12.433+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:15.700+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:15.837+05:30","@version":"1","message":"Finished Spring Data repository scanning in 136 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:16.817+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.841+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.847+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.850+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.863+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.870+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.876+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$765/0x000000010063ac58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.897+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.920+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.948+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.964+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.965+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.966+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:17.992+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.018+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.025+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.030+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.034+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.037+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.045+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.049+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.051+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.348+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.349+05:30","@version":"1","message":"HikariPool-3 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.393+05:30","@version":"1","message":"HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@36695f2c","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.393+05:30","@version":"1","message":"HikariPool-3 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.549+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:18.878+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: a3ccff49-05df-4a8a-b367-b6099ad12134\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.771+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.771+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.771+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.772+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.773+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:21.773+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:23.860+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.028+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.078+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.142+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.182+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.191+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.191+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.193+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.193+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.193+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.193+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.193+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.194+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.194+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.247+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.248+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.249+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.253+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759598725250 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.324+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.324+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759598725324, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.351+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.409+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.423+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.431+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:25.586+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.185+05:30","@version":"1","message":"Started GatewayserverApplication in 18.424 seconds (process running for 655.093)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.188+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.235+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.451+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.453+05:30","@version":"1","message":"Unregistering application GATEWAYSERVER with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.453+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759598726453, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.453+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.461+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.472+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.473+05:30","@version":"1","message":"HikariPool-3 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.487+05:30","@version":"1","message":"HikariPool-3 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:26.488+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:29.522+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:29.531+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:29.535+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-20","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:31.703+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 18272 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:31.703+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:31.708+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:31.709+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:31.709+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:31.710+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:32.812+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:32.825+05:30","@version":"1","message":"Finished Spring Data repository scanning in 12 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:32.973+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.138+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.144+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.150+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.175+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.178+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.180+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$765/0x000000010063ac58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.190+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.194+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.200+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.202+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.203+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.203+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.210+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.218+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.221+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.223+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.226+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.228+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.231+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.234+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.236+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.418+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.419+05:30","@version":"1","message":"HikariPool-4 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.451+05:30","@version":"1","message":"HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4940a680","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.452+05:30","@version":"1","message":"HikariPool-4 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.535+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:33.668+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: d08d59df-d532-4a90-b006-549a810dfbeb\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.006+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.007+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.007+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:35.007+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:36.206+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:36.959+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.008+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.071+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.103+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.110+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.110+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.112+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.112+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.112+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.112+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.112+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.112+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.112+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.143+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.144+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.145+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.147+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759598737147 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.163+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.164+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759598737164, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.164+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.176+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.178+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.181+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.794+05:30","@version":"1","message":"Started GatewayserverApplication in 8.121 seconds (process running for 666.702)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:37.797+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:38.011+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:55:39.043+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:58:09.083+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:58:09.090+05:30","@version":"1","message":"[6ec15949-24]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:399)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:399)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:58:20.454+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T22:58:20.458+05:30","@version":"1","message":"[6ec15949-25]  500 Server Error for HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100\"","logger_name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","thread_name":"reactor-http-nio-3","level":"ERROR","level_value":40000,"stack_trace":"io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.\r\n\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:399)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n\t*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\r\n\t*__checkpoint ⇢ HTTP GET \"/currency-converter/from/USD/to/INR/quantity/100\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:399)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)\r\n\t\tat io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractAllClaims(JwtUtils.java:31)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractClaim(JwtUtils.java:26)\r\n\t\tat com.sample.gatewayserver.util.JwtUtils.extractUsername(JwtUtils.java:22)\r\n\t\tat com.sample.gatewayserver.filters.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:46)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:215)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:204)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:163)\r\n\t\tat org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:157)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:83)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)\r\n\t\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4512)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1169)\r\n\t\tat reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)\r\n\t\tat reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:481)\r\n\t\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:652)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:238)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T22:58:46.511+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:00:18.083+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:00:23.644+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:00:24.911+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:00:25.773+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:00:37.134+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:00:48.664+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:00:50.419+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:01:07.476+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:03:27.481+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:03:32.816+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:05:37.152+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:37.162+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.465+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:663)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:101)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:71)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879)\r\n\t... 19 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.467+05:30","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.466+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:663)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:101)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:71)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879)\r\n\t... 22 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.468+05:30","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.511+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:663)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:101)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:71)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879)\r\n\t... 20 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.512+05:30","@version":"1","message":"Request execution failed with message: I/O error on PUT request for \"http://localhost:8761/eureka/apps/GATEWAYSERVER/host.docker.internal:gatewayserver:8091\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.512+05:30","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information\r\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:905)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:885)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:781)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:663)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information\r\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\r\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\r\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\r\n\tat java.base/java.net.Socket.connect(Socket.java:633)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:569)\r\n\tat org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)\r\n\tat org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)\r\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)\r\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)\r\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)\r\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\r\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\r\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)\r\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:101)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:71)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:879)\r\n\t... 23 more\r\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.513+05:30","@version":"1","message":"Request execution failed with message: I/O error on GET request for \"http://localhost:8761/eureka/apps/delta\": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.514+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)\r\n\tat com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)\r\n\tat com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:10:38.513+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - was unable to send heartbeat!","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)\r\n\tat com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)\r\n\tat com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n","service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:09.059+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - Re-registering apps/GATEWAYSERVER","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:09.060+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:09.294+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-HeartbeatExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:16.873+05:30","@version":"1","message":"[65a24671, L:/192.168.29.167:8091 - R:/192.168.29.167:54763] Decoding failed: FULL_REQUEST(decodeResult: failure(java.lang.IllegalArgumentException: invalid version format: B\u0012.-Ð´Ý0Ë1\u000FØË%L7NA\u000B©É\u0002ºÓYI¨\u0000 ºº\u0013\u0001\u0013\u0002\u0013\u0003À+À/À,À0Ì©Ì¨À\u0013À\u0014\u0000\u0000\u0000/\u00005\u0001\u0000\u0006SÚÚ\u0000\u0000\u0000+\u0000\u0007\u0006::\u0003\u0004\u0003\u0003\u0000\u001B\u0000\u0003\u0002\u0000\u0002\u00003\u0004Ï\u0004Í**\u0000\u0001\u0000\u0011Ì\u0004À`\u0016\u0001P¢>W¨¦Z®N'X÷²­!\t:Ð\"\u0015ÐÆÂºM\u0012W{FH¸³¡IÕ\u000E&¢ÅÑWË\u0013I±Ò»>ÃªHV)TBBA\u0001ÅLÅ`ÇÂÈ\u0006W}§\u0014)\u0019\u001B\u001B¼UÔ<)ÚÐ\u0012\u000FGÀÝÙ¿ÈH\t²K¾ÄSSL(AÈŸI³JJ&³IZ¼!¨G\u001CQHJOÍÚ°UDPR;N´½\u00155T¬CW@©/+ÖÏÐÎ¦;K\u0000ÊRÄ1§\r\u001EU:ÚK3Y\u000BºÀ`OÜ!Ï1¿\u000BXÎ@6CCFCÙÊ\u001CEÕ¨\u0013Z<R\u001F5W½\"Á*¢ÛS·\u001A*MHÀÐ¶Μ\u0010JRÂØ¯O'°\u0017ËGT´=PÍSSÔY¡\u0012©Ä)WX,\u0005¾L\u0019F ~\u001CRIÉ/ÉÙ \u0015ÊR\u001F\u0016PM¥2S'¬{\u000BY|Õ\u0015KJ£QÏ\u0017¢+Æ10@\u001D_Ä(CÁÂE ¢ØM'|E 9^?WGC\u001C]É\u0015\u0006?ÊFLΜÈ²_Ã\u000FÍ´0I,Å\u0007RØJLVJM\u000F¢HGG3OÌ\u0010KD.0 \u001D±»CÜÛQRT9ÁVLV), version: HTTP/1.0, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))\r\nGET /bad-request HTTP/1.0","logger_name":"reactor.netty.http.server.HttpServerOperations","thread_name":"reactor-http-nio-2","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:16.934+05:30","@version":"1","message":"[ac56938c, L:/192.168.29.167:8091 - R:/192.168.29.167:54764] Decoding failed: FULL_REQUEST(decodeResult: failure(java.lang.IllegalArgumentException: invalid version format: E\f¸ÉÉ\u0007#G±9Ã¼ÙÏÃØ\u0003[\u0011ÙÅ5\u001CÆÙ\fA\u0007\u0000 ÊÊ\u0013\u0001\u0013\u0002\u0013\u0003À+À/À,À0Ì©Ì¨À\u0013À\u0014\u0000\u0000\u0000/\u00005\u0001\u0000\u0006**\u0000\u0000\u0000#\u0000\u0000\u0000\u000B\u0000\u0002\u0001\u0000\u00003\u0004Ï\u0004ÍJJ\u0000\u0001\u0000\u0011Ì\u0004ÀÖ©\u001AÚ\u0003PªY×(¼Ô¯Ö*²Ñ#\u0004`\u0007\u001A\t¦°Å\u0005GÉÍ\tITFB\u0006«ÔÂ\u0019®(¼¡ª1P;`FÅ|\u0003F6ÕYEY\u0003PÇ8OÔL;£=\u001BÞÃ\"MÉ-Ù\"½\tZSS*\u0018¥2Ÿ§=¾) \u000EIR\\Æ~Q~\u0018WÆZ\u000B»\u0004AJL!KÑT\f\u0001#Ú§X\u0015¤¿MÕCÇC\u0000ÉWW\u001CJ\r(¤\u0003Ø>C;ÅÍÖ±TÚ\u0004ÈG,\u0016\u0018»`¨PÙ¦¹QQY\u0017[Ä,¿ËHB¿>¸¶,\b®6ª\u001B{PMV«\u0002\\TÊÕH¤DQ»?ÌX`1ÔWCÝI©T]Á´¶³­©¿X ÞÊ\u001C©7\r\b\\UÖÆ\u0018=BËÁF\u0019W({)M\")ÙIÅ@¼\u0012¦M2¤WX÷\u0013ÁYUIÂ2J`:RJ\b¬\u0000T²(Ê! Ñ/\u0002ÚÞÐ/ÇÊVV\r´U¥¬O\u000BXÈ7{SÁN\u0005M\u001C9©VQÇ!'GZ1« ÚØH$;`^ÃÄ`>Æ\rÐ¢5J!\u0002ÇÁËÕ²}RTÞ¼ÌÔ¯7Ó±»\tΜBP¹GJZWH0M[²«KHÊÉ\\Á¥×È\u0015)\u0018EÃTÆ¥Ëª\u001C}\u0001:·4²H R\u0016\u0003·' DUª¬ÇÕUÔÜ¨Ð¤~GÂC^Ð¶ÆÄ_¾Ú\u0011¸Y3Μ^ÆÖBÇIHÀ{¦Z±ÆE·Ñ(Î$Ç`Û+ÛÈÎ9ŸC2\u0001\t©TCSÕ\u0014Ì\u001DK~W``7ÑÖR\u0004N¤TE\u0001\u001EÒÊÎ/´\u0004\u0006Ä£ÓÂÝXF³\t\\9Ö5N1Ò«1:¤(¸Z^¼ÄIP±V\u001CÅFÉCÊ³$ØÙ9U;ÁE0ÒÓ\u0010?Ú\u0010:Y7\u0001¿[(´¤`ªO4ÂÌ°9O76;), version: HTTP/1.0, content: UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf(ridx: 0, widx: 0, cap: 0))\r\nGET /bad-request HTTP/1.0","logger_name":"reactor.netty.http.server.HttpServerOperations","thread_name":"reactor-http-nio-3","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:25.241+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:39.039+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:39.040+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:39.045+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:39.045+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:39.045+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:39.045+05:30","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:39.045+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:39.077+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:11:54.407+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.323+05:30","@version":"1","message":"Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.386+05:30","@version":"1","message":"Unregistering application GATEWAYSERVER with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.387+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759599755387, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.393+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.422+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.706+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.731+05:30","@version":"1","message":"HikariPool-4 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.808+05:30","@version":"1","message":"HikariPool-4 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:35.811+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:38.837+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:38.851+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:38.863+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-30","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:42.508+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 18272 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:42.508+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:42.513+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:42.513+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:42.513+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:42.513+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.426+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.442+05:30","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.652+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.800+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.804+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.809+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.823+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.830+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.833+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$765/0x000000010063ac58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.845+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.857+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.867+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.869+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.870+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.870+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.879+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.894+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.899+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.903+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.910+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.914+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.921+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.928+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:44.931+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:45.166+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:45.169+05:30","@version":"1","message":"HikariPool-5 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:45.204+05:30","@version":"1","message":"HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e393006","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:45.205+05:30","@version":"1","message":"HikariPool-5 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:45.320+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:45.478+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 1234fad0-cf5b-4bd5-8d05-6705c925ee5e\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.997+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.998+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.998+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.998+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.998+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.998+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.998+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.998+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.998+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.999+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.999+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.999+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.999+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:46.999+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:48.379+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.147+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.233+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.294+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.333+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.341+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.342+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.343+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.344+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.344+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.344+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.344+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.344+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.344+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.385+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.386+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.391+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.392+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759599769392 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.417+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.418+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759599769418, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.418+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.444+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.453+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:49.454+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:50.165+05:30","@version":"1","message":"Started GatewayserverApplication in 10.234 seconds (process running for 1699.073)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:50.168+05:30","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:12:55.322+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:13:05.242+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-3","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:13:07.611+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:13:21.694+05:30","@version":"1","message":"Authorization Header:","logger_name":"com.sample.gatewayserver.filters.JwtAuthenticationFilter","thread_name":"reactor-http-nio-1","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.205+05:30","@version":"1","message":"Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.223+05:30","@version":"1","message":"Unregistering application GATEWAYSERVER with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.224+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759599988224, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.224+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.249+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.286+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.298+05:30","@version":"1","message":"HikariPool-5 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.330+05:30","@version":"1","message":"HikariPool-5 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:28.334+05:30","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:31.357+05:30","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:31.385+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:31.395+05:30","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"Thread-41","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:33.756+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 18272 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:33.757+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:33.760+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:33.760+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:33.761+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:33.761+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.436+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.447+05:30","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.591+05:30","@version":"1","message":"BeanFactory id=cb66bad2-8a0e-39a0-90fa-45d10797f0df","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.712+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.719+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.723+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.733+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.737+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.739+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$765/0x000000010063ac58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.751+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.758+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.770+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.774+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.775+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.775+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.787+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.806+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.810+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.813+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.818+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.821+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.828+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.832+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:34.835+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.067+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.068+05:30","@version":"1","message":"HikariPool-6 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.094+05:30","@version":"1","message":"HikariPool-6 - Added connection com.mysql.cj.jdbc.ConnectionImpl@47413d00","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.095+05:30","@version":"1","message":"HikariPool-6 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.152+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.177+05:30","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes\\com\\sample\\gatewayserver\\config\\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.sample.gatewayserver.filters.JwtAuthenticationFilter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}","logger_name":"org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.177+05:30","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.178+05:30","@version":"1","message":"HikariPool-6 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.180+05:30","@version":"1","message":"HikariPool-6 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.195+05:30","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:16:35.248+05:30","@version":"1","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nParameter 0 of constructor in com.sample.gatewayserver.config.SecurityConfig required a bean of type 'com.sample.gatewayserver.filters.JwtAuthenticationFilter' that could not be found.\r\n\r\n\r\nAction:\r\n\r\nConsider defining a bean of type 'com.sample.gatewayserver.filters.JwtAuthenticationFilter' in your configuration.\r\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"restartedMain","level":"ERROR","level_value":40000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:00.188+05:30","@version":"1","message":"Starting GatewayserverApplication using Java 17.0.10 with PID 9432 (D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server\\target\\classes started by Gaurav in D:\\Gaurav\\Study\\Programs\\Backend Programs\\microservice\\microservice2\\spring-cloud-gateway-server)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:00.229+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:00.359+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:00.360+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[default], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:00.360+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:00.360+05:30","@version":"1","message":"Located environment: name=gatewayserver, profiles=[dev], label=null, version=8087fbb53af88acfb89bdd8ccf23458efab7a0e4, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:00.363+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:00.363+05:30","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:03.291+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:03.793+05:30","@version":"1","message":"Finished Spring Data repository scanning in 484 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:05.385+05:30","@version":"1","message":"BeanFactory id=39b9265b-b629-36b9-9036-ca72388ba70a","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:06.930+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:06.947+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:06.955+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:06.984+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:06.991+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:06.995+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$765/0x000000010063b7b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.014+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.034+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.069+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.077+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.079+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.080+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.116+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.241+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.254+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.290+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.311+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.316+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.353+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.399+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:07.407+05:30","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:12.173+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:12.365+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:13.394+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@524379d7","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:13.399+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:16.633+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:17.187+05:30","@version":"1","message":"\r\n\r\nUsing generated security password: 24c7060a-f141-444a-91f8-c8968a96363c\r\n","logger_name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.431+05:30","@version":"1","message":"Loaded RoutePredicateFactory [After]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.431+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Before]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.432+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Between]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.432+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Cookie]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.434+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Header]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.435+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Host]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.435+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Method]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.435+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Path]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.436+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Query]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.436+05:30","@version":"1","message":"Loaded RoutePredicateFactory [ReadBody]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.436+05:30","@version":"1","message":"Loaded RoutePredicateFactory [RemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.437+05:30","@version":"1","message":"Loaded RoutePredicateFactory [XForwardedRemoteAddr]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.437+05:30","@version":"1","message":"Loaded RoutePredicateFactory [Weight]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:23.437+05:30","@version":"1","message":"Loaded RoutePredicateFactory [CloudFoundryRouteService]","logger_name":"org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:29.079+05:30","@version":"1","message":"Exposing 30 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:32.150+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:32.285+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:32.492+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:32.811+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:32.983+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:32.993+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.045+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.046+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.046+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.046+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.046+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.046+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.046+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.568+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.573+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.577+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.586+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759600233585 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.615+05:30","@version":"1","message":"Registering application GATEWAYSERVER with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.616+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759600233616, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.619+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:33.696+05:30","@version":"1","message":"DiscoveryClient_GATEWAYSERVER/host.docker.internal:gatewayserver:8091 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:34.171+05:30","@version":"1","message":"Netty started on port 8091","logger_name":"org.springframework.boot.web.embedded.netty.NettyWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:34.174+05:30","@version":"1","message":"Updating port to 8091","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:20:35.790+05:30","@version":"1","message":"Started GatewayserverApplication in 41.262 seconds (process running for 42.954)","logger_name":"com.sample.gatewayserver.GatewayserverApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"gateway-server"}
{"@timestamp":"2025-10-04T23:25:33.087+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"gateway-server"}
