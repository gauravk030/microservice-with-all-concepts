{"@timestamp":"2025-10-07T11:24:18.924+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:23.473+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:24.263+05:30","@version":"1","message":"Located environment: name=exchange-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:24.265+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:24.304+05:30","@version":"1","message":"The following 1 profile is active: \"dev\"","logger_name":"com.demo.microservices.currencyexchangeservice.CurrencyExchangeServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:24.340+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:24.340+05:30","@version":"1","message":"Located environment: name=exchange-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:24.340+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:24.340+05:30","@version":"1","message":"Located environment: name=exchange-service, profiles=[dev], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:26.437+05:30","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:26.467+05:30","@version":"1","message":"Finished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:26.993+05:30","@version":"1","message":"BeanFactory id=691c7443-6076-3c1a-95b9-fc2668d17410","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.888+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.897+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.915+05:30","@version":"1","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.930+05:30","@version":"1","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.936+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.940+05:30","@version":"1","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$739/0x00000001005adb40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.945+05:30","@version":"1","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.956+05:30","@version":"1","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.967+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.971+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.972+05:30","@version":"1","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.974+05:30","@version":"1","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:27.991+05:30","@version":"1","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:28.008+05:30","@version":"1","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:28.015+05:30","@version":"1","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:28.018+05:30","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:28.024+05:30","@version":"1","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:28.037+05:30","@version":"1","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:29.834+05:30","@version":"1","message":"Tomcat initialized with port 8001 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:29.856+05:30","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8001\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:29.860+05:30","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:29.861+05:30","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:30.711+05:30","@version":"1","message":"At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.","logger_name":"org.apache.jasper.servlet.TldScanner","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:30.771+05:30","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:30.855+05:30","@version":"1","message":"Root WebApplicationContext: initialization completed in 6431 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:31.721+05:30","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:32.989+05:30","@version":"1","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@240f08ea","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:32.991+05:30","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:33.058+05:30","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3307/auth'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:34.717+05:30","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:36.499+05:30","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:36.716+05:30","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:39.401+05:30","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:40.581+05:30","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:40.667+05:30","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:40.972+05:30","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.244+05:30","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.468+05:30","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.485+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.527+05:30","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.527+05:30","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.527+05:30","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.527+05:30","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.527+05:30","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.527+05:30","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:41.527+05:30","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.194+05:30","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.201+05:30","@version":"1","message":"Starting heartbeat executor: renew interval is: 5","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.208+05:30","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.216+05:30","@version":"1","message":"Discovery Client initialized at timestamp 1759816482215 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.228+05:30","@version":"1","message":"Registering application EXCHANGE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.249+05:30","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1759816482249, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.255+05:30","@version":"1","message":"DiscoveryClient_EXCHANGE-SERVICE/host.docker.internal:exchange-service:8001: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.256+05:30","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8001\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.351+05:30","@version":"1","message":"DiscoveryClient_EXCHANGE-SERVICE/host.docker.internal:exchange-service:8001 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.365+05:30","@version":"1","message":"Tomcat started on port 8001 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:42.366+05:30","@version":"1","message":"Updating port to 8001","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:24:43.032+05:30","@version":"1","message":"Started CurrencyExchangeServiceApplication in 26.201 seconds (process running for 27.453)","logger_name":"com.demo.microservices.currencyexchangeservice.CurrencyExchangeServiceApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:29:41.560+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:34:41.633+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:39:41.658+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:44:41.674+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:49:41.687+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:54:41.695+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T11:59:41.704+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T12:04:41.720+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T12:09:41.735+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T12:14:41.739+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T12:19:41.751+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T12:24:41.760+05:30","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T15:31:52.923+05:30","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T15:31:55.825+05:30","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T15:31:56.565+05:30","@version":"1","message":"Located environment: name=exchange-service, profiles=[default], label=null, version=36dbc2b55bb2b769be8eb63d0730b435568ef9e1, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
{"@timestamp":"2025-10-07T15:31:56.566+05:30","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/gauravk030/git-config-repo.git/config/application.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"exchange-service"}
